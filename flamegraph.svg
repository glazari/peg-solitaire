<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="741.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="6541"><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.0153%" y="565" width="0.0153%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.2653%" y="575.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (3 samples, 0.05%)</title><rect x="0.0000%" y="581" width="0.0459%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="591.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.02%)</title><rect x="0.0306%" y="565" width="0.0153%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.2806%" y="575.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="0.0306%" y="549" width="0.0153%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.2806%" y="559.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="0.0306%" y="533" width="0.0153%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.2806%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="0.0306%" y="517" width="0.0153%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2806%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="0.0306%" y="501" width="0.0153%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2806%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.02%)</title><rect x="0.0306%" y="485" width="0.0153%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.2806%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.0306%" y="469" width="0.0153%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.2806%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.0306%" y="453" width="0.0153%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.2806%" y="463.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.02%)</title><rect x="0.0459%" y="565" width="0.0153%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.2959%" y="575.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.02%)</title><rect x="0.0459%" y="549" width="0.0153%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.2959%" y="559.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (4 samples, 0.06%)</title><rect x="0.0612%" y="549" width="0.0612%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="4"/><text x="0.3112%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.05%)</title><rect x="0.0764%" y="533" width="0.0459%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="3"/><text x="0.3264%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="0.1070%" y="517" width="0.0153%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="0.3570%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="0.1070%" y="501" width="0.0153%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="0.3570%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.1223%" y="533" width="0.0153%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="1"/><text x="0.3723%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="0.1223%" y="517" width="0.0153%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="1"/><text x="0.3723%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.1376%" y="517" width="0.0153%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="1"/><text x="0.3876%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="0.1376%" y="501" width="0.0153%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="1"/><text x="0.3876%" y="511.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.1376%" y="533" width="0.0306%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="2"/><text x="0.3876%" y="543.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.02%)</title><rect x="0.1529%" y="517" width="0.0153%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="1"/><text x="0.4029%" y="527.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (3 samples, 0.05%)</title><rect x="0.1682%" y="501" width="0.0459%" height="15" fill="rgb(221,5,38)" fg:x="11" fg:w="3"/><text x="0.4182%" y="511.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.02%)</title><rect x="0.2293%" y="485" width="0.0153%" height="15" fill="rgb(247,18,42)" fg:x="15" fg:w="1"/><text x="0.4793%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.2293%" y="469" width="0.0153%" height="15" fill="rgb(241,131,45)" fg:x="15" fg:w="1"/><text x="0.4793%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="0.2293%" y="453" width="0.0153%" height="15" fill="rgb(249,31,29)" fg:x="15" fg:w="1"/><text x="0.4793%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="0.2293%" y="437" width="0.0153%" height="15" fill="rgb(225,111,53)" fg:x="15" fg:w="1"/><text x="0.4793%" y="447.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.2446%" y="469" width="0.0306%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="2"/><text x="0.4946%" y="479.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.02%)</title><rect x="0.2752%" y="453" width="0.0153%" height="15" fill="rgb(214,148,48)" fg:x="18" fg:w="1"/><text x="0.5252%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="0.2752%" y="437" width="0.0153%" height="15" fill="rgb(232,36,49)" fg:x="18" fg:w="1"/><text x="0.5252%" y="447.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.2905%" y="437" width="0.0306%" height="15" fill="rgb(209,103,24)" fg:x="19" fg:w="2"/><text x="0.5405%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.3211%" y="405" width="0.0153%" height="15" fill="rgb(229,88,8)" fg:x="21" fg:w="1"/><text x="0.5711%" y="415.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.3211%" y="421" width="0.0306%" height="15" fill="rgb(213,181,19)" fg:x="21" fg:w="2"/><text x="0.5711%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="0.3363%" y="405" width="0.0153%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="1"/><text x="0.5863%" y="415.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.3516%" y="405" width="0.0306%" height="15" fill="rgb(241,83,37)" fg:x="23" fg:w="2"/><text x="0.6016%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="0.3516%" y="389" width="0.0306%" height="15" fill="rgb(233,36,39)" fg:x="23" fg:w="2"/><text x="0.6016%" y="399.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.3822%" y="389" width="0.0306%" height="15" fill="rgb(226,3,54)" fg:x="25" fg:w="2"/><text x="0.6322%" y="399.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.02%)</title><rect x="0.3975%" y="373" width="0.0153%" height="15" fill="rgb(245,192,40)" fg:x="26" fg:w="1"/><text x="0.6475%" y="383.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.02%)</title><rect x="0.4128%" y="325" width="0.0153%" height="15" fill="rgb(238,167,29)" fg:x="27" fg:w="1"/><text x="0.6628%" y="335.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.02%)</title><rect x="0.4281%" y="261" width="0.0153%" height="15" fill="rgb(232,182,51)" fg:x="28" fg:w="1"/><text x="0.6781%" y="271.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="0.4434%" y="245" width="0.0153%" height="15" fill="rgb(231,60,39)" fg:x="29" fg:w="1"/><text x="0.6934%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="0.4892%" y="229" width="0.0306%" height="15" fill="rgb(208,69,12)" fg:x="32" fg:w="2"/><text x="0.7392%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="0.5045%" y="213" width="0.0153%" height="15" fill="rgb(235,93,37)" fg:x="33" fg:w="1"/><text x="0.7545%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="0.5045%" y="197" width="0.0153%" height="15" fill="rgb(213,116,39)" fg:x="33" fg:w="1"/><text x="0.7545%" y="207.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (5 samples, 0.08%)</title><rect x="0.4586%" y="245" width="0.0764%" height="15" fill="rgb(222,207,29)" fg:x="30" fg:w="5"/><text x="0.7086%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.5198%" y="229" width="0.0153%" height="15" fill="rgb(206,96,30)" fg:x="34" fg:w="1"/><text x="0.7698%" y="239.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (3 samples, 0.05%)</title><rect x="0.5351%" y="229" width="0.0459%" height="15" fill="rgb(218,138,4)" fg:x="35" fg:w="3"/><text x="0.7851%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="0.6727%" y="213" width="0.0306%" height="15" fill="rgb(250,191,14)" fg:x="44" fg:w="2"/><text x="0.9227%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="0.6727%" y="197" width="0.0306%" height="15" fill="rgb(239,60,40)" fg:x="44" fg:w="2"/><text x="0.9227%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="0.6727%" y="181" width="0.0306%" height="15" fill="rgb(206,27,48)" fg:x="44" fg:w="2"/><text x="0.9227%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.09%)</title><rect x="0.7033%" y="213" width="0.0917%" height="15" fill="rgb(225,35,8)" fg:x="46" fg:w="6"/><text x="0.9533%" y="223.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (16 samples, 0.24%)</title><rect x="0.5810%" y="229" width="0.2446%" height="15" fill="rgb(250,213,24)" fg:x="38" fg:w="16"/><text x="0.8310%" y="239.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (2 samples, 0.03%)</title><rect x="0.7950%" y="213" width="0.0306%" height="15" fill="rgb(247,123,22)" fg:x="52" fg:w="2"/><text x="1.0450%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.8714%" y="213" width="0.0153%" height="15" fill="rgb(231,138,38)" fg:x="57" fg:w="1"/><text x="1.1214%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="0.8867%" y="213" width="0.0153%" height="15" fill="rgb(231,145,46)" fg:x="58" fg:w="1"/><text x="1.1367%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.03%)</title><rect x="0.9020%" y="213" width="0.0306%" height="15" fill="rgb(251,118,11)" fg:x="59" fg:w="2"/><text x="1.1520%" y="223.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (8 samples, 0.12%)</title><rect x="0.9326%" y="213" width="0.1223%" height="15" fill="rgb(217,147,25)" fg:x="61" fg:w="8"/><text x="1.1826%" y="223.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (2 samples, 0.03%)</title><rect x="1.0243%" y="197" width="0.0306%" height="15" fill="rgb(247,81,37)" fg:x="67" fg:w="2"/><text x="1.2743%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.11%)</title><rect x="1.4830%" y="197" width="0.1070%" height="15" fill="rgb(209,12,38)" fg:x="97" fg:w="7"/><text x="1.7330%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.09%)</title><rect x="1.4982%" y="181" width="0.0917%" height="15" fill="rgb(227,1,9)" fg:x="98" fg:w="6"/><text x="1.7482%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.08%)</title><rect x="1.5135%" y="165" width="0.0764%" height="15" fill="rgb(248,47,43)" fg:x="99" fg:w="5"/><text x="1.7635%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="1.5441%" y="149" width="0.0459%" height="15" fill="rgb(221,10,30)" fg:x="101" fg:w="3"/><text x="1.7941%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="1.5900%" y="197" width="0.0153%" height="15" fill="rgb(210,229,1)" fg:x="104" fg:w="1"/><text x="1.8400%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.11%)</title><rect x="1.6053%" y="197" width="0.1070%" height="15" fill="rgb(222,148,37)" fg:x="105" fg:w="7"/><text x="1.8553%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.08%)</title><rect x="1.6358%" y="181" width="0.0764%" height="15" fill="rgb(234,67,33)" fg:x="107" fg:w="5"/><text x="1.8858%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="1.7123%" y="197" width="0.0153%" height="15" fill="rgb(247,98,35)" fg:x="112" fg:w="1"/><text x="1.9623%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.03%)</title><rect x="1.7276%" y="197" width="0.0306%" height="15" fill="rgb(247,138,52)" fg:x="113" fg:w="2"/><text x="1.9776%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="1.7581%" y="197" width="0.0306%" height="15" fill="rgb(213,79,30)" fg:x="115" fg:w="2"/><text x="2.0081%" y="207.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="1.7887%" y="197" width="0.0306%" height="15" fill="rgb(246,177,23)" fg:x="117" fg:w="2"/><text x="2.0387%" y="207.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="1.7887%" y="181" width="0.0306%" height="15" fill="rgb(230,62,27)" fg:x="117" fg:w="2"/><text x="2.0387%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="1.7887%" y="165" width="0.0306%" height="15" fill="rgb(216,154,8)" fg:x="117" fg:w="2"/><text x="2.0387%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="1.8040%" y="149" width="0.0153%" height="15" fill="rgb(244,35,45)" fg:x="118" fg:w="1"/><text x="2.0540%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="1.8040%" y="133" width="0.0153%" height="15" fill="rgb(251,115,12)" fg:x="118" fg:w="1"/><text x="2.0540%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (55 samples, 0.84%)</title><rect x="1.0549%" y="213" width="0.8409%" height="15" fill="rgb(240,54,50)" fg:x="69" fg:w="55"/><text x="1.3049%" y="223.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (5 samples, 0.08%)</title><rect x="1.8193%" y="197" width="0.0764%" height="15" fill="rgb(233,84,52)" fg:x="119" fg:w="5"/><text x="2.0693%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.08%)</title><rect x="2.0333%" y="197" width="0.0764%" height="15" fill="rgb(207,117,47)" fg:x="133" fg:w="5"/><text x="2.2833%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.15%)</title><rect x="2.1098%" y="197" width="0.1529%" height="15" fill="rgb(249,43,39)" fg:x="138" fg:w="10"/><text x="2.3598%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.08%)</title><rect x="2.1862%" y="181" width="0.0764%" height="15" fill="rgb(209,38,44)" fg:x="143" fg:w="5"/><text x="2.4362%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.11%)</title><rect x="2.2627%" y="197" width="0.1070%" height="15" fill="rgb(236,212,23)" fg:x="148" fg:w="7"/><text x="2.5127%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.06%)</title><rect x="2.3697%" y="197" width="0.0612%" height="15" fill="rgb(242,79,21)" fg:x="155" fg:w="4"/><text x="2.6197%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="2.4308%" y="197" width="0.0153%" height="15" fill="rgb(211,96,35)" fg:x="159" fg:w="1"/><text x="2.6808%" y="207.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="2.4461%" y="197" width="0.0153%" height="15" fill="rgb(253,215,40)" fg:x="160" fg:w="1"/><text x="2.6961%" y="207.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (3 samples, 0.05%)</title><rect x="2.4614%" y="197" width="0.0459%" height="15" fill="rgb(211,81,21)" fg:x="161" fg:w="3"/><text x="2.7114%" y="207.50"></text></g><g><title>peg-solitaire`__rdl_alloc (1 samples, 0.02%)</title><rect x="2.5073%" y="197" width="0.0153%" height="15" fill="rgb(208,190,38)" fg:x="164" fg:w="1"/><text x="2.7573%" y="207.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (15 samples, 0.23%)</title><rect x="2.5226%" y="197" width="0.2293%" height="15" fill="rgb(235,213,38)" fg:x="165" fg:w="15"/><text x="2.7726%" y="207.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (5 samples, 0.08%)</title><rect x="2.6754%" y="181" width="0.0764%" height="15" fill="rgb(237,122,38)" fg:x="175" fg:w="5"/><text x="2.9254%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="4.2960%" y="165" width="0.0306%" height="15" fill="rgb(244,218,35)" fg:x="281" fg:w="2"/><text x="4.5460%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.23%)</title><rect x="4.3571%" y="149" width="0.2293%" height="15" fill="rgb(240,68,47)" fg:x="285" fg:w="15"/><text x="4.6071%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="4.5406%" y="133" width="0.0459%" height="15" fill="rgb(210,16,53)" fg:x="297" fg:w="3"/><text x="4.7906%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.43%)</title><rect x="4.1890%" y="181" width="0.4281%" height="15" fill="rgb(235,124,12)" fg:x="274" fg:w="28"/><text x="4.4390%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.29%)</title><rect x="4.3266%" y="165" width="0.2905%" height="15" fill="rgb(224,169,11)" fg:x="283" fg:w="19"/><text x="4.5766%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="4.5865%" y="149" width="0.0306%" height="15" fill="rgb(250,166,2)" fg:x="300" fg:w="2"/><text x="4.8365%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="4.6170%" y="181" width="0.0153%" height="15" fill="rgb(242,216,29)" fg:x="302" fg:w="1"/><text x="4.8670%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.34%)</title><rect x="4.6323%" y="181" width="0.3363%" height="15" fill="rgb(230,116,27)" fg:x="303" fg:w="22"/><text x="4.8823%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.18%)</title><rect x="4.7852%" y="165" width="0.1835%" height="15" fill="rgb(228,99,48)" fg:x="313" fg:w="12"/><text x="5.0352%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.05%)</title><rect x="4.9687%" y="181" width="0.0459%" height="15" fill="rgb(253,11,6)" fg:x="325" fg:w="3"/><text x="5.2187%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.09%)</title><rect x="5.0145%" y="181" width="0.0917%" height="15" fill="rgb(247,143,39)" fg:x="328" fg:w="6"/><text x="5.2645%" y="191.50"></text></g><g><title>peg-solitaire`__rdl_alloc (1 samples, 0.02%)</title><rect x="5.1063%" y="181" width="0.0153%" height="15" fill="rgb(236,97,10)" fg:x="334" fg:w="1"/><text x="5.3563%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.09%)</title><rect x="5.1215%" y="149" width="0.0917%" height="15" fill="rgb(233,208,19)" fg:x="335" fg:w="6"/><text x="5.3715%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.06%)</title><rect x="5.1521%" y="133" width="0.0612%" height="15" fill="rgb(216,164,2)" fg:x="337" fg:w="4"/><text x="5.4021%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="5.1827%" y="117" width="0.0306%" height="15" fill="rgb(220,129,5)" fg:x="339" fg:w="2"/><text x="5.4327%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="5.2133%" y="149" width="0.0153%" height="15" fill="rgb(242,17,10)" fg:x="341" fg:w="1"/><text x="5.4633%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.12%)</title><rect x="5.1215%" y="181" width="0.1223%" height="15" fill="rgb(242,107,0)" fg:x="335" fg:w="8"/><text x="5.3715%" y="191.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (8 samples, 0.12%)</title><rect x="5.1215%" y="165" width="0.1223%" height="15" fill="rgb(251,28,31)" fg:x="335" fg:w="8"/><text x="5.3715%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="5.2286%" y="149" width="0.0153%" height="15" fill="rgb(233,223,10)" fg:x="342" fg:w="1"/><text x="5.4786%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.05%)</title><rect x="5.7178%" y="133" width="0.0459%" height="15" fill="rgb(215,21,27)" fg:x="374" fg:w="3"/><text x="5.9678%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.12%)</title><rect x="5.6566%" y="165" width="0.1223%" height="15" fill="rgb(232,23,21)" fg:x="370" fg:w="8"/><text x="5.9066%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.09%)</title><rect x="5.6872%" y="149" width="0.0917%" height="15" fill="rgb(244,5,23)" fg:x="372" fg:w="6"/><text x="5.9372%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="5.7636%" y="133" width="0.0153%" height="15" fill="rgb(226,81,46)" fg:x="377" fg:w="1"/><text x="6.0136%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (199 samples, 3.04%)</title><rect x="2.7519%" y="197" width="3.0423%" height="15" fill="rgb(247,70,30)" fg:x="180" fg:w="199"/><text x="3.0019%" y="207.50">peg..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (36 samples, 0.55%)</title><rect x="5.2438%" y="181" width="0.5504%" height="15" fill="rgb(212,68,19)" fg:x="343" fg:w="36"/><text x="5.4938%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="5.7789%" y="165" width="0.0153%" height="15" fill="rgb(240,187,13)" fg:x="378" fg:w="1"/><text x="6.0289%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="6.1764%" y="181" width="0.0153%" height="15" fill="rgb(223,113,26)" fg:x="404" fg:w="1"/><text x="6.4264%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.14%)</title><rect x="6.1917%" y="181" width="0.1376%" height="15" fill="rgb(206,192,2)" fg:x="405" fg:w="9"/><text x="6.4417%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.31%)</title><rect x="6.3293%" y="181" width="0.3058%" height="15" fill="rgb(241,108,4)" fg:x="414" fg:w="20"/><text x="6.5793%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.08%)</title><rect x="6.5586%" y="165" width="0.0764%" height="15" fill="rgb(247,173,49)" fg:x="429" fg:w="5"/><text x="6.8086%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (9 samples, 0.14%)</title><rect x="6.6351%" y="181" width="0.1376%" height="15" fill="rgb(224,114,35)" fg:x="434" fg:w="9"/><text x="6.8851%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.15%)</title><rect x="6.7727%" y="181" width="0.1529%" height="15" fill="rgb(245,159,27)" fg:x="443" fg:w="10"/><text x="7.0227%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="6.9255%" y="181" width="0.0153%" height="15" fill="rgb(245,172,44)" fg:x="453" fg:w="1"/><text x="7.1755%" y="191.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (12 samples, 0.18%)</title><rect x="6.9408%" y="181" width="0.1835%" height="15" fill="rgb(236,23,11)" fg:x="454" fg:w="12"/><text x="7.1908%" y="191.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (4 samples, 0.06%)</title><rect x="7.1243%" y="181" width="0.0612%" height="15" fill="rgb(205,117,38)" fg:x="466" fg:w="4"/><text x="7.3743%" y="191.50"></text></g><g><title>peg-solitaire`__rdl_dealloc (1 samples, 0.02%)</title><rect x="7.1854%" y="181" width="0.0153%" height="15" fill="rgb(237,72,25)" fg:x="470" fg:w="1"/><text x="7.4354%" y="191.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="7.2007%" y="181" width="0.0153%" height="15" fill="rgb(244,70,9)" fg:x="471" fg:w="1"/><text x="7.4507%" y="191.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (44 samples, 0.67%)</title><rect x="7.2160%" y="181" width="0.6727%" height="15" fill="rgb(217,125,39)" fg:x="472" fg:w="44"/><text x="7.4660%" y="191.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (13 samples, 0.20%)</title><rect x="7.6900%" y="165" width="0.1987%" height="15" fill="rgb(235,36,10)" fg:x="503" fg:w="13"/><text x="7.9400%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.14%)</title><rect x="12.0012%" y="149" width="0.1376%" height="15" fill="rgb(251,123,47)" fg:x="785" fg:w="9"/><text x="12.2512%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (52 samples, 0.79%)</title><rect x="12.3223%" y="133" width="0.7950%" height="15" fill="rgb(221,13,13)" fg:x="806" fg:w="52"/><text x="12.5723%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.18%)</title><rect x="12.9338%" y="117" width="0.1835%" height="15" fill="rgb(238,131,9)" fg:x="846" fg:w="12"/><text x="13.1838%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (98 samples, 1.50%)</title><rect x="11.7413%" y="165" width="1.4982%" height="15" fill="rgb(211,50,8)" fg:x="768" fg:w="98"/><text x="11.9913%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (72 samples, 1.10%)</title><rect x="12.1388%" y="149" width="1.1007%" height="15" fill="rgb(245,182,24)" fg:x="794" fg:w="72"/><text x="12.3888%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.12%)</title><rect x="13.1173%" y="133" width="0.1223%" height="15" fill="rgb(242,14,37)" fg:x="858" fg:w="8"/><text x="13.3673%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.20%)</title><rect x="13.2396%" y="165" width="0.1987%" height="15" fill="rgb(246,228,12)" fg:x="866" fg:w="13"/><text x="13.4896%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (92 samples, 1.41%)</title><rect x="13.4383%" y="165" width="1.4065%" height="15" fill="rgb(213,55,15)" fg:x="879" fg:w="92"/><text x="13.6883%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (35 samples, 0.54%)</title><rect x="14.3097%" y="149" width="0.5351%" height="15" fill="rgb(209,9,3)" fg:x="936" fg:w="35"/><text x="14.5597%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.08%)</title><rect x="14.8448%" y="165" width="0.0764%" height="15" fill="rgb(230,59,30)" fg:x="971" fg:w="5"/><text x="15.0948%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (32 samples, 0.49%)</title><rect x="14.9213%" y="165" width="0.4892%" height="15" fill="rgb(209,121,21)" fg:x="976" fg:w="32"/><text x="15.1713%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="15.4105%" y="165" width="0.0306%" height="15" fill="rgb(220,109,13)" fg:x="1008" fg:w="2"/><text x="15.6605%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.12%)</title><rect x="15.4411%" y="165" width="0.1223%" height="15" fill="rgb(232,18,1)" fg:x="1010" fg:w="8"/><text x="15.6911%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="15.5634%" y="165" width="0.0153%" height="15" fill="rgb(215,41,42)" fg:x="1018" fg:w="1"/><text x="15.8134%" y="175.50"></text></g><g><title>peg-solitaire`__rdl_alloc (1 samples, 0.02%)</title><rect x="15.6245%" y="149" width="0.0153%" height="15" fill="rgb(224,123,36)" fg:x="1022" fg:w="1"/><text x="15.8745%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.14%)</title><rect x="15.6704%" y="133" width="0.1376%" height="15" fill="rgb(240,125,3)" fg:x="1025" fg:w="9"/><text x="15.9204%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.11%)</title><rect x="15.7010%" y="117" width="0.1070%" height="15" fill="rgb(205,98,50)" fg:x="1027" fg:w="7"/><text x="15.9510%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.08%)</title><rect x="15.7315%" y="101" width="0.0764%" height="15" fill="rgb(205,185,37)" fg:x="1029" fg:w="5"/><text x="15.9815%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="15.8080%" y="133" width="0.0153%" height="15" fill="rgb(238,207,15)" fg:x="1034" fg:w="1"/><text x="16.0580%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="15.8233%" y="117" width="0.0153%" height="15" fill="rgb(213,199,42)" fg:x="1035" fg:w="1"/><text x="16.0733%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.02%)</title><rect x="15.8233%" y="101" width="0.0153%" height="15" fill="rgb(235,201,11)" fg:x="1035" fg:w="1"/><text x="16.0733%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="15.8233%" y="85" width="0.0153%" height="15" fill="rgb(207,46,11)" fg:x="1035" fg:w="1"/><text x="16.0733%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="15.8233%" y="69" width="0.0153%" height="15" fill="rgb(241,35,35)" fg:x="1035" fg:w="1"/><text x="16.0733%" y="79.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.28%)</title><rect x="15.5787%" y="165" width="0.2752%" height="15" fill="rgb(243,32,47)" fg:x="1019" fg:w="18"/><text x="15.8287%" y="175.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (14 samples, 0.21%)</title><rect x="15.6398%" y="149" width="0.2140%" height="15" fill="rgb(247,202,23)" fg:x="1023" fg:w="14"/><text x="15.8898%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="15.8233%" y="133" width="0.0306%" height="15" fill="rgb(219,102,11)" fg:x="1035" fg:w="2"/><text x="16.0733%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="15.8386%" y="117" width="0.0153%" height="15" fill="rgb(243,110,44)" fg:x="1036" fg:w="1"/><text x="16.0886%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="16.9087%" y="133" width="0.0153%" height="15" fill="rgb(222,74,54)" fg:x="1106" fg:w="1"/><text x="17.1587%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (604 samples, 9.23%)</title><rect x="7.8887%" y="181" width="9.2341%" height="15" fill="rgb(216,99,12)" fg:x="516" fg:w="604"/><text x="8.1387%" y="191.50">peg-solitaire..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (83 samples, 1.27%)</title><rect x="15.8538%" y="165" width="1.2689%" height="15" fill="rgb(226,22,26)" fg:x="1037" fg:w="83"/><text x="16.1038%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.34%)</title><rect x="16.7864%" y="149" width="0.3363%" height="15" fill="rgb(217,163,10)" fg:x="1098" fg:w="22"/><text x="17.0364%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.20%)</title><rect x="16.9240%" y="133" width="0.1987%" height="15" fill="rgb(213,25,53)" fg:x="1107" fg:w="13"/><text x="17.1740%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.09%)</title><rect x="17.0310%" y="117" width="0.0917%" height="15" fill="rgb(252,105,26)" fg:x="1114" fg:w="6"/><text x="17.2810%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="17.0922%" y="101" width="0.0306%" height="15" fill="rgb(220,39,43)" fg:x="1118" fg:w="2"/><text x="17.3422%" y="111.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (9 samples, 0.14%)</title><rect x="17.1228%" y="181" width="0.1376%" height="15" fill="rgb(229,68,48)" fg:x="1120" fg:w="9"/><text x="17.3728%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="17.2451%" y="165" width="0.0153%" height="15" fill="rgb(252,8,32)" fg:x="1128" fg:w="1"/><text x="17.4951%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="17.2451%" y="149" width="0.0153%" height="15" fill="rgb(223,20,43)" fg:x="1128" fg:w="1"/><text x="17.4951%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.06%)</title><rect x="18.0095%" y="165" width="0.0612%" height="15" fill="rgb(229,81,49)" fg:x="1178" fg:w="4"/><text x="18.2595%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (19 samples, 0.29%)</title><rect x="18.0706%" y="165" width="0.2905%" height="15" fill="rgb(236,28,36)" fg:x="1182" fg:w="19"/><text x="18.3206%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (43 samples, 0.66%)</title><rect x="18.3611%" y="165" width="0.6574%" height="15" fill="rgb(249,185,26)" fg:x="1201" fg:w="43"/><text x="18.6111%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.23%)</title><rect x="18.7892%" y="149" width="0.2293%" height="15" fill="rgb(249,174,33)" fg:x="1229" fg:w="15"/><text x="19.0392%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (20 samples, 0.31%)</title><rect x="19.0185%" y="165" width="0.3058%" height="15" fill="rgb(233,201,37)" fg:x="1244" fg:w="20"/><text x="19.2685%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.41%)</title><rect x="19.3243%" y="165" width="0.4128%" height="15" fill="rgb(221,78,26)" fg:x="1264" fg:w="27"/><text x="19.5743%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="19.7370%" y="165" width="0.0153%" height="15" fill="rgb(250,127,30)" fg:x="1291" fg:w="1"/><text x="19.9870%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (17 samples, 0.26%)</title><rect x="19.7523%" y="165" width="0.2599%" height="15" fill="rgb(230,49,44)" fg:x="1292" fg:w="17"/><text x="20.0023%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (11 samples, 0.17%)</title><rect x="20.0122%" y="165" width="0.1682%" height="15" fill="rgb(229,67,23)" fg:x="1309" fg:w="11"/><text x="20.2622%" y="175.50"></text></g><g><title>peg-solitaire`__rdl_alloc (9 samples, 0.14%)</title><rect x="20.1804%" y="165" width="0.1376%" height="15" fill="rgb(249,83,47)" fg:x="1320" fg:w="9"/><text x="20.4304%" y="175.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="20.3180%" y="165" width="0.0153%" height="15" fill="rgb(215,43,3)" fg:x="1329" fg:w="1"/><text x="20.5680%" y="175.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (53 samples, 0.81%)</title><rect x="20.3333%" y="165" width="0.8103%" height="15" fill="rgb(238,154,13)" fg:x="1330" fg:w="53"/><text x="20.5833%" y="175.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (19 samples, 0.29%)</title><rect x="20.8531%" y="149" width="0.2905%" height="15" fill="rgb(219,56,2)" fg:x="1364" fg:w="19"/><text x="21.1031%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.23%)</title><rect x="28.4972%" y="133" width="0.2293%" height="15" fill="rgb(233,0,4)" fg:x="1864" fg:w="15"/><text x="28.7472%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (98 samples, 1.50%)</title><rect x="28.9405%" y="117" width="1.4982%" height="15" fill="rgb(235,30,7)" fg:x="1893" fg:w="98"/><text x="29.1905%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (30 samples, 0.46%)</title><rect x="29.9801%" y="101" width="0.4586%" height="15" fill="rgb(250,79,13)" fg:x="1961" fg:w="30"/><text x="30.2301%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (184 samples, 2.81%)</title><rect x="27.8704%" y="149" width="2.8130%" height="15" fill="rgb(211,146,34)" fg:x="1823" fg:w="184"/><text x="28.1204%" y="159.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (128 samples, 1.96%)</title><rect x="28.7265%" y="133" width="1.9569%" height="15" fill="rgb(228,22,38)" fg:x="1879" fg:w="128"/><text x="28.9765%" y="143.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.24%)</title><rect x="30.4388%" y="117" width="0.2446%" height="15" fill="rgb(235,168,5)" fg:x="1991" fg:w="16"/><text x="30.6888%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (14 samples, 0.21%)</title><rect x="30.6834%" y="149" width="0.2140%" height="15" fill="rgb(221,155,16)" fg:x="2007" fg:w="14"/><text x="30.9334%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (155 samples, 2.37%)</title><rect x="30.8974%" y="149" width="2.3697%" height="15" fill="rgb(215,215,53)" fg:x="2021" fg:w="155"/><text x="31.1474%" y="159.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (53 samples, 0.81%)</title><rect x="32.4568%" y="133" width="0.8103%" height="15" fill="rgb(223,4,10)" fg:x="2123" fg:w="53"/><text x="32.7068%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (12 samples, 0.18%)</title><rect x="33.2671%" y="149" width="0.1835%" height="15" fill="rgb(234,103,6)" fg:x="2176" fg:w="12"/><text x="33.5171%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (50 samples, 0.76%)</title><rect x="33.4505%" y="149" width="0.7644%" height="15" fill="rgb(227,97,0)" fg:x="2188" fg:w="50"/><text x="33.7005%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.14%)</title><rect x="34.2150%" y="149" width="0.1376%" height="15" fill="rgb(234,150,53)" fg:x="2238" fg:w="9"/><text x="34.4650%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (27 samples, 0.41%)</title><rect x="34.3525%" y="149" width="0.4128%" height="15" fill="rgb(228,201,54)" fg:x="2247" fg:w="27"/><text x="34.6025%" y="159.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="34.7653%" y="149" width="0.0153%" height="15" fill="rgb(222,22,37)" fg:x="2274" fg:w="1"/><text x="35.0153%" y="159.50"></text></g><g><title>peg-solitaire`__rdl_alloc (1 samples, 0.02%)</title><rect x="34.7806%" y="149" width="0.0153%" height="15" fill="rgb(237,53,32)" fg:x="2275" fg:w="1"/><text x="35.0306%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="34.8112%" y="133" width="0.0153%" height="15" fill="rgb(233,25,53)" fg:x="2277" fg:w="1"/><text x="35.0612%" y="143.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="34.8265%" y="133" width="0.0153%" height="15" fill="rgb(210,40,34)" fg:x="2278" fg:w="1"/><text x="35.0765%" y="143.50"></text></g><g><title>peg-solitaire`__rdl_alloc (2 samples, 0.03%)</title><rect x="34.8418%" y="133" width="0.0306%" height="15" fill="rgb(241,220,44)" fg:x="2279" fg:w="2"/><text x="35.0918%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.06%)</title><rect x="34.9794%" y="101" width="0.0612%" height="15" fill="rgb(235,28,35)" fg:x="2288" fg:w="4"/><text x="35.2294%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.38%)</title><rect x="34.8876%" y="117" width="0.3822%" height="15" fill="rgb(210,56,17)" fg:x="2282" fg:w="25"/><text x="35.1376%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.23%)</title><rect x="35.0405%" y="101" width="0.2293%" height="15" fill="rgb(224,130,29)" fg:x="2292" fg:w="15"/><text x="35.2905%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.12%)</title><rect x="35.1475%" y="85" width="0.1223%" height="15" fill="rgb(235,212,8)" fg:x="2299" fg:w="8"/><text x="35.3975%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.06%)</title><rect x="35.2087%" y="69" width="0.0612%" height="15" fill="rgb(223,33,50)" fg:x="2303" fg:w="4"/><text x="35.4587%" y="79.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (32 samples, 0.49%)</title><rect x="34.7959%" y="149" width="0.4892%" height="15" fill="rgb(219,149,13)" fg:x="2276" fg:w="32"/><text x="35.0459%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (27 samples, 0.41%)</title><rect x="34.8723%" y="133" width="0.4128%" height="15" fill="rgb(250,156,29)" fg:x="2281" fg:w="27"/><text x="35.1223%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="35.2698%" y="117" width="0.0153%" height="15" fill="rgb(216,193,19)" fg:x="2307" fg:w="1"/><text x="35.5198%" y="127.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="35.2851%" y="149" width="0.0306%" height="15" fill="rgb(216,135,14)" fg:x="2308" fg:w="2"/><text x="35.5351%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="36.9362%" y="117" width="0.0153%" height="15" fill="rgb(241,47,5)" fg:x="2416" fg:w="1"/><text x="37.1862%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.23%)</title><rect x="37.0127%" y="101" width="0.2293%" height="15" fill="rgb(233,42,35)" fg:x="2421" fg:w="15"/><text x="37.2627%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.06%)</title><rect x="37.1809%" y="85" width="0.0612%" height="15" fill="rgb(231,13,6)" fg:x="2432" fg:w="4"/><text x="37.4309%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.41%)</title><rect x="36.8445%" y="133" width="0.4128%" height="15" fill="rgb(207,181,40)" fg:x="2410" fg:w="27"/><text x="37.0945%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.31%)</title><rect x="36.9515%" y="117" width="0.3058%" height="15" fill="rgb(254,173,49)" fg:x="2417" fg:w="20"/><text x="37.2015%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="37.2420%" y="101" width="0.0153%" height="15" fill="rgb(221,1,38)" fg:x="2436" fg:w="1"/><text x="37.4920%" y="111.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1,059 samples, 16.19%)</title><rect x="21.1436%" y="165" width="16.1902%" height="15" fill="rgb(206,124,46)" fg:x="1383" fg:w="1059"/><text x="21.3936%" y="175.50">peg-solitaire`peg_solitai..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (132 samples, 2.02%)</title><rect x="35.3157%" y="149" width="2.0180%" height="15" fill="rgb(249,21,11)" fg:x="2310" fg:w="132"/><text x="35.5657%" y="159.50">p..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.08%)</title><rect x="37.2573%" y="133" width="0.0764%" height="15" fill="rgb(222,201,40)" fg:x="2437" fg:w="5"/><text x="37.5073%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (41 samples, 0.63%)</title><rect x="37.3337%" y="165" width="0.6268%" height="15" fill="rgb(235,61,29)" fg:x="2442" fg:w="41"/><text x="37.5837%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.08%)</title><rect x="37.8841%" y="149" width="0.0764%" height="15" fill="rgb(219,207,3)" fg:x="2478" fg:w="5"/><text x="38.1341%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.06%)</title><rect x="37.8994%" y="133" width="0.0612%" height="15" fill="rgb(222,56,46)" fg:x="2479" fg:w="4"/><text x="38.1494%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.05%)</title><rect x="37.9147%" y="117" width="0.0459%" height="15" fill="rgb(239,76,54)" fg:x="2480" fg:w="3"/><text x="38.1647%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="37.9453%" y="101" width="0.0153%" height="15" fill="rgb(231,124,27)" fg:x="2482" fg:w="1"/><text x="38.1953%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.17%)</title><rect x="38.6944%" y="149" width="0.1682%" height="15" fill="rgb(249,195,6)" fg:x="2531" fg:w="11"/><text x="38.9444%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (21 samples, 0.32%)</title><rect x="38.8626%" y="149" width="0.3211%" height="15" fill="rgb(237,174,47)" fg:x="2542" fg:w="21"/><text x="39.1126%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (65 samples, 0.99%)</title><rect x="39.1836%" y="149" width="0.9937%" height="15" fill="rgb(206,201,31)" fg:x="2563" fg:w="65"/><text x="39.4336%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (17 samples, 0.26%)</title><rect x="39.9174%" y="133" width="0.2599%" height="15" fill="rgb(231,57,52)" fg:x="2611" fg:w="17"/><text x="40.1674%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (28 samples, 0.43%)</title><rect x="40.1773%" y="149" width="0.4281%" height="15" fill="rgb(248,177,22)" fg:x="2628" fg:w="28"/><text x="40.4273%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (28 samples, 0.43%)</title><rect x="40.6054%" y="149" width="0.4281%" height="15" fill="rgb(215,211,37)" fg:x="2656" fg:w="28"/><text x="40.8554%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.06%)</title><rect x="41.0335%" y="149" width="0.0612%" height="15" fill="rgb(241,128,51)" fg:x="2684" fg:w="4"/><text x="41.2835%" y="159.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (18 samples, 0.28%)</title><rect x="41.0946%" y="149" width="0.2752%" height="15" fill="rgb(227,165,31)" fg:x="2688" fg:w="18"/><text x="41.3446%" y="159.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (14 samples, 0.21%)</title><rect x="41.3698%" y="149" width="0.2140%" height="15" fill="rgb(228,167,24)" fg:x="2706" fg:w="14"/><text x="41.6198%" y="159.50"></text></g><g><title>peg-solitaire`__rdl_alloc (14 samples, 0.21%)</title><rect x="41.5839%" y="149" width="0.2140%" height="15" fill="rgb(228,143,12)" fg:x="2720" fg:w="14"/><text x="41.8339%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="41.7979%" y="149" width="0.0153%" height="15" fill="rgb(249,149,8)" fg:x="2734" fg:w="1"/><text x="42.0479%" y="159.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (46 samples, 0.70%)</title><rect x="41.8132%" y="149" width="0.7033%" height="15" fill="rgb(243,35,44)" fg:x="2735" fg:w="46"/><text x="42.0632%" y="159.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (14 samples, 0.21%)</title><rect x="42.3024%" y="133" width="0.2140%" height="15" fill="rgb(246,89,9)" fg:x="2767" fg:w="14"/><text x="42.5524%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.26%)</title><rect x="51.8422%" y="117" width="0.2599%" height="15" fill="rgb(233,213,13)" fg:x="3391" fg:w="17"/><text x="52.0922%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (144 samples, 2.20%)</title><rect x="52.6984%" y="101" width="2.2015%" height="15" fill="rgb(233,141,41)" fg:x="3447" fg:w="144"/><text x="52.9484%" y="111.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (36 samples, 0.55%)</title><rect x="54.3495%" y="85" width="0.5504%" height="15" fill="rgb(239,167,4)" fg:x="3555" fg:w="36"/><text x="54.5995%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (296 samples, 4.53%)</title><rect x="50.6956%" y="133" width="4.5253%" height="15" fill="rgb(209,217,16)" fg:x="3316" fg:w="296"/><text x="50.9456%" y="143.50">libsy..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (204 samples, 3.12%)</title><rect x="52.1021%" y="117" width="3.1188%" height="15" fill="rgb(219,88,35)" fg:x="3408" fg:w="204"/><text x="52.3521%" y="127.50">lib..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.32%)</title><rect x="54.8999%" y="101" width="0.3211%" height="15" fill="rgb(220,193,23)" fg:x="3591" fg:w="21"/><text x="55.1499%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (17 samples, 0.26%)</title><rect x="55.2209%" y="133" width="0.2599%" height="15" fill="rgb(230,90,52)" fg:x="3612" fg:w="17"/><text x="55.4709%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (83 samples, 1.27%)</title><rect x="57.4836%" y="117" width="1.2689%" height="15" fill="rgb(252,106,19)" fg:x="3760" fg:w="83"/><text x="57.7336%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (216 samples, 3.30%)</title><rect x="55.4808%" y="133" width="3.3022%" height="15" fill="rgb(206,74,20)" fg:x="3629" fg:w="216"/><text x="55.7308%" y="143.50">lib..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="58.7525%" y="117" width="0.0306%" height="15" fill="rgb(230,138,44)" fg:x="3843" fg:w="2"/><text x="59.0025%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (18 samples, 0.28%)</title><rect x="58.7831%" y="133" width="0.2752%" height="15" fill="rgb(235,182,43)" fg:x="3845" fg:w="18"/><text x="59.0331%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (73 samples, 1.12%)</title><rect x="59.0582%" y="133" width="1.1160%" height="15" fill="rgb(242,16,51)" fg:x="3863" fg:w="73"/><text x="59.3082%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.17%)</title><rect x="60.1743%" y="133" width="0.1682%" height="15" fill="rgb(248,9,4)" fg:x="3936" fg:w="11"/><text x="60.4243%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (21 samples, 0.32%)</title><rect x="60.3425%" y="133" width="0.3211%" height="15" fill="rgb(210,31,22)" fg:x="3947" fg:w="21"/><text x="60.5925%" y="143.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="60.6635%" y="133" width="0.0153%" height="15" fill="rgb(239,54,39)" fg:x="3968" fg:w="1"/><text x="60.9135%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="60.8164%" y="85" width="0.0153%" height="15" fill="rgb(230,99,41)" fg:x="3978" fg:w="1"/><text x="61.0664%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.26%)</title><rect x="60.8928%" y="69" width="0.2599%" height="15" fill="rgb(253,106,12)" fg:x="3983" fg:w="17"/><text x="61.1428%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.09%)</title><rect x="61.0610%" y="53" width="0.0917%" height="15" fill="rgb(213,46,41)" fg:x="3994" fg:w="6"/><text x="61.3110%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (29 samples, 0.44%)</title><rect x="60.7399%" y="101" width="0.4434%" height="15" fill="rgb(215,133,35)" fg:x="3973" fg:w="29"/><text x="60.9899%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.35%)</title><rect x="60.8317%" y="85" width="0.3516%" height="15" fill="rgb(213,28,5)" fg:x="3979" fg:w="23"/><text x="61.0817%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="61.1527%" y="69" width="0.0306%" height="15" fill="rgb(215,77,49)" fg:x="4000" fg:w="2"/><text x="61.4027%" y="79.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (35 samples, 0.54%)</title><rect x="60.6788%" y="133" width="0.5351%" height="15" fill="rgb(248,100,22)" fg:x="3969" fg:w="35"/><text x="60.9288%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (32 samples, 0.49%)</title><rect x="60.7247%" y="117" width="0.4892%" height="15" fill="rgb(208,67,9)" fg:x="3972" fg:w="32"/><text x="60.9747%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.03%)</title><rect x="61.1833%" y="101" width="0.0306%" height="15" fill="rgb(219,133,21)" fg:x="4002" fg:w="2"/><text x="61.4333%" y="111.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (3 samples, 0.05%)</title><rect x="61.2139%" y="133" width="0.0459%" height="15" fill="rgb(246,46,29)" fg:x="4004" fg:w="3"/><text x="61.4639%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="63.9199%" y="101" width="0.0306%" height="15" fill="rgb(246,185,52)" fg:x="4181" fg:w="2"/><text x="64.1699%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (25 samples, 0.38%)</title><rect x="63.9810%" y="85" width="0.3822%" height="15" fill="rgb(252,136,11)" fg:x="4185" fg:w="25"/><text x="64.2310%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="64.3174%" y="69" width="0.0459%" height="15" fill="rgb(219,138,53)" fg:x="4207" fg:w="3"/><text x="64.5674%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.67%)</title><rect x="63.7364%" y="117" width="0.6727%" height="15" fill="rgb(211,51,23)" fg:x="4169" fg:w="44"/><text x="63.9864%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.46%)</title><rect x="63.9505%" y="101" width="0.4586%" height="15" fill="rgb(247,221,28)" fg:x="4183" fg:w="30"/><text x="64.2005%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="64.3632%" y="85" width="0.0459%" height="15" fill="rgb(251,222,45)" fg:x="4210" fg:w="3"/><text x="64.6132%" y="95.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1,436 samples, 21.95%)</title><rect x="42.5164%" y="149" width="21.9538%" height="15" fill="rgb(217,162,53)" fg:x="2781" fg:w="1436"/><text x="42.7664%" y="159.50">peg-solitaire`peg_solitaire::find_m..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (210 samples, 3.21%)</title><rect x="61.2597%" y="133" width="3.2105%" height="15" fill="rgb(229,93,14)" fg:x="4007" fg:w="210"/><text x="61.5097%" y="143.50">peg..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.06%)</title><rect x="64.4091%" y="117" width="0.0612%" height="15" fill="rgb(209,67,49)" fg:x="4213" fg:w="4"/><text x="64.6591%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.09%)</title><rect x="65.8768%" y="101" width="0.0917%" height="15" fill="rgb(213,87,29)" fg:x="4309" fg:w="6"/><text x="66.1268%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="65.9379%" y="85" width="0.0306%" height="15" fill="rgb(205,151,52)" fg:x="4313" fg:w="2"/><text x="66.1879%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.14%)</title><rect x="65.8462%" y="133" width="0.1376%" height="15" fill="rgb(253,215,39)" fg:x="4307" fg:w="9"/><text x="66.0962%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.11%)</title><rect x="65.8768%" y="117" width="0.1070%" height="15" fill="rgb(221,220,41)" fg:x="4309" fg:w="7"/><text x="66.1268%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="65.9685%" y="101" width="0.0153%" height="15" fill="rgb(218,133,21)" fg:x="4315" fg:w="1"/><text x="66.2185%" y="111.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (100 samples, 1.53%)</title><rect x="64.4703%" y="149" width="1.5288%" height="15" fill="rgb(221,193,43)" fg:x="4217" fg:w="100"/><text x="64.7203%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="65.9838%" y="133" width="0.0153%" height="15" fill="rgb(240,128,52)" fg:x="4316" fg:w="1"/><text x="66.2338%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.17%)</title><rect x="66.3354%" y="133" width="0.1682%" height="15" fill="rgb(253,114,12)" fg:x="4339" fg:w="11"/><text x="66.5854%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (18 samples, 0.28%)</title><rect x="66.5036%" y="133" width="0.2752%" height="15" fill="rgb(215,223,47)" fg:x="4350" fg:w="18"/><text x="66.7536%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (69 samples, 1.05%)</title><rect x="66.7788%" y="133" width="1.0549%" height="15" fill="rgb(248,225,23)" fg:x="4368" fg:w="69"/><text x="67.0288%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.24%)</title><rect x="67.5891%" y="117" width="0.2446%" height="15" fill="rgb(250,108,0)" fg:x="4421" fg:w="16"/><text x="67.8391%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (24 samples, 0.37%)</title><rect x="67.8337%" y="133" width="0.3669%" height="15" fill="rgb(228,208,7)" fg:x="4437" fg:w="24"/><text x="68.0837%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (26 samples, 0.40%)</title><rect x="68.2006%" y="133" width="0.3975%" height="15" fill="rgb(244,45,10)" fg:x="4461" fg:w="26"/><text x="68.4506%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.05%)</title><rect x="68.5981%" y="133" width="0.0459%" height="15" fill="rgb(207,125,25)" fg:x="4487" fg:w="3"/><text x="68.8481%" y="143.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (20 samples, 0.31%)</title><rect x="68.6439%" y="133" width="0.3058%" height="15" fill="rgb(210,195,18)" fg:x="4490" fg:w="20"/><text x="68.8939%" y="143.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (19 samples, 0.29%)</title><rect x="68.9497%" y="133" width="0.2905%" height="15" fill="rgb(249,80,12)" fg:x="4510" fg:w="19"/><text x="69.1997%" y="143.50"></text></g><g><title>peg-solitaire`__rdl_alloc (12 samples, 0.18%)</title><rect x="69.2402%" y="133" width="0.1835%" height="15" fill="rgb(221,65,9)" fg:x="4529" fg:w="12"/><text x="69.4902%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (21 samples, 0.32%)</title><rect x="69.4236%" y="133" width="0.3211%" height="15" fill="rgb(235,49,36)" fg:x="4541" fg:w="21"/><text x="69.6736%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (11 samples, 0.17%)</title><rect x="69.5765%" y="117" width="0.1682%" height="15" fill="rgb(225,32,20)" fg:x="4551" fg:w="11"/><text x="69.8265%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.28%)</title><rect x="76.9913%" y="101" width="0.2752%" height="15" fill="rgb(215,141,46)" fg:x="5036" fg:w="18"/><text x="77.2413%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (78 samples, 1.19%)</title><rect x="77.7710%" y="85" width="1.1925%" height="15" fill="rgb(250,160,47)" fg:x="5087" fg:w="78"/><text x="78.0210%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (19 samples, 0.29%)</title><rect x="78.6730%" y="69" width="0.2905%" height="15" fill="rgb(216,222,40)" fg:x="5146" fg:w="19"/><text x="78.9230%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (214 samples, 3.27%)</title><rect x="75.9364%" y="117" width="3.2717%" height="15" fill="rgb(234,217,39)" fg:x="4967" fg:w="214"/><text x="76.1864%" y="127.50">lib..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (127 samples, 1.94%)</title><rect x="77.2665%" y="101" width="1.9416%" height="15" fill="rgb(207,178,40)" fg:x="5054" fg:w="127"/><text x="77.5165%" y="111.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.24%)</title><rect x="78.9635%" y="85" width="0.2446%" height="15" fill="rgb(221,136,13)" fg:x="5165" fg:w="16"/><text x="79.2135%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (22 samples, 0.34%)</title><rect x="79.2081%" y="117" width="0.3363%" height="15" fill="rgb(249,199,10)" fg:x="5181" fg:w="22"/><text x="79.4581%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (206 samples, 3.15%)</title><rect x="79.5444%" y="117" width="3.1494%" height="15" fill="rgb(249,222,13)" fg:x="5203" fg:w="206"/><text x="79.7944%" y="127.50">lib..</text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (79 samples, 1.21%)</title><rect x="81.4860%" y="101" width="1.2078%" height="15" fill="rgb(244,185,38)" fg:x="5330" fg:w="79"/><text x="81.7360%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.11%)</title><rect x="82.6938%" y="117" width="0.1070%" height="15" fill="rgb(236,202,9)" fg:x="5409" fg:w="7"/><text x="82.9438%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (67 samples, 1.02%)</title><rect x="82.8008%" y="117" width="1.0243%" height="15" fill="rgb(250,229,37)" fg:x="5416" fg:w="67"/><text x="83.0508%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.06%)</title><rect x="83.8251%" y="117" width="0.0612%" height="15" fill="rgb(206,174,23)" fg:x="5483" fg:w="4"/><text x="84.0751%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (26 samples, 0.40%)</title><rect x="83.8863%" y="117" width="0.3975%" height="15" fill="rgb(211,33,43)" fg:x="5487" fg:w="26"/><text x="84.1363%" y="127.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (3 samples, 0.05%)</title><rect x="84.2837%" y="117" width="0.0459%" height="15" fill="rgb(245,58,50)" fg:x="5513" fg:w="3"/><text x="84.5337%" y="127.50"></text></g><g><title>peg-solitaire`__rdl_alloc (1 samples, 0.02%)</title><rect x="84.3449%" y="101" width="0.0153%" height="15" fill="rgb(244,68,36)" fg:x="5517" fg:w="1"/><text x="84.5949%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.08%)</title><rect x="84.4825%" y="53" width="0.0764%" height="15" fill="rgb(232,229,15)" fg:x="5526" fg:w="5"/><text x="84.7325%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="84.5284%" y="37" width="0.0306%" height="15" fill="rgb(254,30,23)" fg:x="5529" fg:w="2"/><text x="84.7784%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.18%)</title><rect x="84.4061%" y="85" width="0.1835%" height="15" fill="rgb(235,160,14)" fg:x="5521" fg:w="12"/><text x="84.6561%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.12%)</title><rect x="84.4672%" y="69" width="0.1223%" height="15" fill="rgb(212,155,44)" fg:x="5525" fg:w="8"/><text x="84.7172%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="84.5589%" y="53" width="0.0306%" height="15" fill="rgb(226,2,50)" fg:x="5531" fg:w="2"/><text x="84.8089%" y="63.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.28%)</title><rect x="84.3296%" y="117" width="0.2752%" height="15" fill="rgb(234,177,6)" fg:x="5516" fg:w="18"/><text x="84.5796%" y="127.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (16 samples, 0.24%)</title><rect x="84.3602%" y="101" width="0.2446%" height="15" fill="rgb(217,24,9)" fg:x="5518" fg:w="16"/><text x="84.6102%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="84.5895%" y="85" width="0.0153%" height="15" fill="rgb(220,13,46)" fg:x="5533" fg:w="1"/><text x="84.8395%" y="95.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="84.6048%" y="117" width="0.0153%" height="15" fill="rgb(239,221,27)" fg:x="5534" fg:w="1"/><text x="84.8548%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (27 samples, 0.41%)</title><rect x="87.2802%" y="69" width="0.4128%" height="15" fill="rgb(222,198,25)" fg:x="5709" fg:w="27"/><text x="87.5302%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.06%)</title><rect x="87.6319%" y="53" width="0.0612%" height="15" fill="rgb(211,99,13)" fg:x="5732" fg:w="4"/><text x="87.8819%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.81%)</title><rect x="86.9439%" y="101" width="0.8103%" height="15" fill="rgb(232,111,31)" fg:x="5687" fg:w="53"/><text x="87.1939%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (41 samples, 0.63%)</title><rect x="87.1274%" y="85" width="0.6268%" height="15" fill="rgb(245,82,37)" fg:x="5699" fg:w="41"/><text x="87.3774%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.06%)</title><rect x="87.6930%" y="69" width="0.0612%" height="15" fill="rgb(227,149,46)" fg:x="5736" fg:w="4"/><text x="87.9430%" y="79.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1,181 samples, 18.06%)</title><rect x="69.7447%" y="133" width="18.0553%" height="15" fill="rgb(218,36,50)" fg:x="4562" fg:w="1181"/><text x="69.9947%" y="143.50">peg-solitaire`peg_solitaire:..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (208 samples, 3.18%)</title><rect x="84.6201%" y="117" width="3.1799%" height="15" fill="rgb(226,80,48)" fg:x="5535" fg:w="208"/><text x="84.8701%" y="127.50">peg..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.05%)</title><rect x="87.7542%" y="101" width="0.0459%" height="15" fill="rgb(238,224,15)" fg:x="5740" fg:w="3"/><text x="88.0042%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.05%)</title><rect x="89.9404%" y="101" width="0.0459%" height="15" fill="rgb(241,136,10)" fg:x="5883" fg:w="3"/><text x="90.1904%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (21 samples, 0.32%)</title><rect x="90.1238%" y="85" width="0.3211%" height="15" fill="rgb(208,32,45)" fg:x="5895" fg:w="21"/><text x="90.3738%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.08%)</title><rect x="90.3684%" y="69" width="0.0764%" height="15" fill="rgb(207,135,9)" fg:x="5911" fg:w="5"/><text x="90.6184%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.70%)</title><rect x="89.7875%" y="117" width="0.7033%" height="15" fill="rgb(206,86,44)" fg:x="5873" fg:w="46"/><text x="90.0375%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (33 samples, 0.50%)</title><rect x="89.9862%" y="101" width="0.5045%" height="15" fill="rgb(245,177,15)" fg:x="5886" fg:w="33"/><text x="90.2362%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="90.4449%" y="85" width="0.0459%" height="15" fill="rgb(206,64,50)" fg:x="5916" fg:w="3"/><text x="90.6949%" y="95.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (178 samples, 2.72%)</title><rect x="87.8000%" y="133" width="2.7213%" height="15" fill="rgb(234,36,40)" fg:x="5743" fg:w="178"/><text x="88.0500%" y="143.50">pe..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.03%)</title><rect x="90.4908%" y="117" width="0.0306%" height="15" fill="rgb(213,64,8)" fg:x="5919" fg:w="2"/><text x="90.7408%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="90.6589%" y="117" width="0.0306%" height="15" fill="rgb(210,75,36)" fg:x="5930" fg:w="2"/><text x="90.9089%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (12 samples, 0.18%)</title><rect x="90.6895%" y="117" width="0.1835%" height="15" fill="rgb(229,88,21)" fg:x="5932" fg:w="12"/><text x="90.9395%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.35%)</title><rect x="90.8730%" y="117" width="0.3516%" height="15" fill="rgb(252,204,47)" fg:x="5944" fg:w="23"/><text x="91.1230%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.17%)</title><rect x="91.0564%" y="101" width="0.1682%" height="15" fill="rgb(208,77,27)" fg:x="5956" fg:w="11"/><text x="91.3064%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.11%)</title><rect x="91.2246%" y="117" width="0.1070%" height="15" fill="rgb(221,76,26)" fg:x="5967" fg:w="7"/><text x="91.4746%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.12%)</title><rect x="91.3316%" y="117" width="0.1223%" height="15" fill="rgb(225,139,18)" fg:x="5974" fg:w="8"/><text x="91.5816%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="91.4539%" y="117" width="0.0306%" height="15" fill="rgb(230,137,11)" fg:x="5982" fg:w="2"/><text x="91.7039%" y="127.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (5 samples, 0.08%)</title><rect x="91.4845%" y="117" width="0.0764%" height="15" fill="rgb(212,28,1)" fg:x="5984" fg:w="5"/><text x="91.7345%" y="127.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (5 samples, 0.08%)</title><rect x="91.5609%" y="117" width="0.0764%" height="15" fill="rgb(248,164,17)" fg:x="5989" fg:w="5"/><text x="91.8109%" y="127.50"></text></g><g><title>peg-solitaire`__rdl_alloc (5 samples, 0.08%)</title><rect x="91.6374%" y="117" width="0.0764%" height="15" fill="rgb(222,171,42)" fg:x="5994" fg:w="5"/><text x="91.8874%" y="127.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (2 samples, 0.03%)</title><rect x="91.7138%" y="117" width="0.0306%" height="15" fill="rgb(243,84,45)" fg:x="5999" fg:w="2"/><text x="91.9638%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (32 samples, 0.49%)</title><rect x="94.0529%" y="69" width="0.4892%" height="15" fill="rgb(252,49,23)" fg:x="6152" fg:w="32"/><text x="94.3029%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.09%)</title><rect x="94.4504%" y="53" width="0.0917%" height="15" fill="rgb(215,19,7)" fg:x="6178" fg:w="6"/><text x="94.7004%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (59 samples, 0.90%)</title><rect x="93.7013%" y="101" width="0.9020%" height="15" fill="rgb(238,81,41)" fg:x="6129" fg:w="59"/><text x="93.9513%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (39 samples, 0.60%)</title><rect x="94.0070%" y="85" width="0.5962%" height="15" fill="rgb(210,199,37)" fg:x="6149" fg:w="39"/><text x="94.2570%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.06%)</title><rect x="94.5421%" y="69" width="0.0612%" height="15" fill="rgb(244,192,49)" fg:x="6184" fg:w="4"/><text x="94.7921%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.06%)</title><rect x="94.6033%" y="101" width="0.0612%" height="15" fill="rgb(226,211,11)" fg:x="6188" fg:w="4"/><text x="94.8533%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (77 samples, 1.18%)</title><rect x="94.6644%" y="101" width="1.1772%" height="15" fill="rgb(236,162,54)" fg:x="6192" fg:w="77"/><text x="94.9144%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (31 samples, 0.47%)</title><rect x="95.3677%" y="85" width="0.4739%" height="15" fill="rgb(220,229,9)" fg:x="6238" fg:w="31"/><text x="95.6177%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.09%)</title><rect x="95.8416%" y="101" width="0.0917%" height="15" fill="rgb(250,87,22)" fg:x="6269" fg:w="6"/><text x="96.0916%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.20%)</title><rect x="95.9333%" y="101" width="0.1987%" height="15" fill="rgb(239,43,17)" fg:x="6275" fg:w="13"/><text x="96.1833%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="96.1321%" y="101" width="0.0153%" height="15" fill="rgb(231,177,25)" fg:x="6288" fg:w="1"/><text x="96.3821%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.12%)</title><rect x="96.1474%" y="101" width="0.1223%" height="15" fill="rgb(219,179,1)" fg:x="6289" fg:w="8"/><text x="96.3974%" y="111.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (2 samples, 0.03%)</title><rect x="96.2697%" y="101" width="0.0306%" height="15" fill="rgb(238,219,53)" fg:x="6297" fg:w="2"/><text x="96.5197%" y="111.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="96.3003%" y="101" width="0.0306%" height="15" fill="rgb(232,167,36)" fg:x="6299" fg:w="2"/><text x="96.5503%" y="111.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="96.3155%" y="85" width="0.0153%" height="15" fill="rgb(244,19,51)" fg:x="6300" fg:w="1"/><text x="96.5655%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="96.3155%" y="69" width="0.0153%" height="15" fill="rgb(224,6,22)" fg:x="6300" fg:w="1"/><text x="96.5655%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="96.3155%" y="53" width="0.0153%" height="15" fill="rgb(224,145,5)" fg:x="6300" fg:w="1"/><text x="96.5655%" y="63.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="96.3308%" y="101" width="0.0153%" height="15" fill="rgb(234,130,49)" fg:x="6301" fg:w="1"/><text x="96.5808%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.15%)</title><rect x="97.4774%" y="53" width="0.1529%" height="15" fill="rgb(254,6,2)" fg:x="6376" fg:w="10"/><text x="97.7274%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="97.5845%" y="37" width="0.0459%" height="15" fill="rgb(208,96,46)" fg:x="6383" fg:w="3"/><text x="97.8345%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.32%)</title><rect x="97.3246%" y="85" width="0.3211%" height="15" fill="rgb(239,3,39)" fg:x="6366" fg:w="21"/><text x="97.5746%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.23%)</title><rect x="97.4163%" y="69" width="0.2293%" height="15" fill="rgb(233,210,1)" fg:x="6372" fg:w="15"/><text x="97.6663%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="97.6303%" y="53" width="0.0153%" height="15" fill="rgb(244,137,37)" fg:x="6386" fg:w="1"/><text x="97.8803%" y="63.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (387 samples, 5.92%)</title><rect x="91.7444%" y="117" width="5.9165%" height="15" fill="rgb(240,136,2)" fg:x="6001" fg:w="387"/><text x="91.9944%" y="127.50">peg-soli..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (86 samples, 1.31%)</title><rect x="96.3461%" y="101" width="1.3148%" height="15" fill="rgb(239,18,37)" fg:x="6302" fg:w="86"/><text x="96.5961%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="97.6456%" y="85" width="0.0153%" height="15" fill="rgb(218,185,22)" fg:x="6387" fg:w="1"/><text x="97.8956%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.17%)</title><rect x="98.8075%" y="69" width="0.1682%" height="15" fill="rgb(225,218,4)" fg:x="6463" fg:w="11"/><text x="99.0575%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="98.9298%" y="53" width="0.0459%" height="15" fill="rgb(230,182,32)" fg:x="6471" fg:w="3"/><text x="99.1798%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.29%)</title><rect x="98.7005%" y="101" width="0.2905%" height="15" fill="rgb(242,56,43)" fg:x="6456" fg:w="19"/><text x="98.9505%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.20%)</title><rect x="98.7922%" y="85" width="0.1987%" height="15" fill="rgb(233,99,24)" fg:x="6462" fg:w="13"/><text x="99.0422%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="98.9757%" y="69" width="0.0153%" height="15" fill="rgb(234,209,42)" fg:x="6474" fg:w="1"/><text x="99.2257%" y="79.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (89 samples, 1.36%)</title><rect x="97.6609%" y="117" width="1.3606%" height="15" fill="rgb(227,7,12)" fg:x="6388" fg:w="89"/><text x="97.9109%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.03%)</title><rect x="98.9910%" y="101" width="0.0306%" height="15" fill="rgb(245,203,43)" fg:x="6475" fg:w="2"/><text x="99.2410%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.05%)</title><rect x="99.0368%" y="101" width="0.0459%" height="15" fill="rgb(238,205,33)" fg:x="6478" fg:w="3"/><text x="99.2868%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="99.0674%" y="85" width="0.0153%" height="15" fill="rgb(231,56,7)" fg:x="6480" fg:w="1"/><text x="99.3174%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="99.0827%" y="101" width="0.0153%" height="15" fill="rgb(244,186,29)" fg:x="6481" fg:w="1"/><text x="99.3327%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="99.2662%" y="69" width="0.0153%" height="15" fill="rgb(234,111,31)" fg:x="6493" fg:w="1"/><text x="99.5162%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.14%)</title><rect x="99.2203%" y="85" width="0.1376%" height="15" fill="rgb(241,149,10)" fg:x="6490" fg:w="9"/><text x="99.4703%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.08%)</title><rect x="99.2815%" y="69" width="0.0764%" height="15" fill="rgb(249,206,44)" fg:x="6494" fg:w="5"/><text x="99.5315%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.05%)</title><rect x="99.3120%" y="53" width="0.0459%" height="15" fill="rgb(251,153,30)" fg:x="6496" fg:w="3"/><text x="99.5620%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="99.3426%" y="37" width="0.0153%" height="15" fill="rgb(239,152,38)" fg:x="6498" fg:w="1"/><text x="99.5926%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="99.3579%" y="85" width="0.0153%" height="15" fill="rgb(249,139,47)" fg:x="6499" fg:w="1"/><text x="99.6079%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.15%)</title><rect x="99.3732%" y="85" width="0.1529%" height="15" fill="rgb(244,64,35)" fg:x="6500" fg:w="10"/><text x="99.6232%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.08%)</title><rect x="99.4496%" y="69" width="0.0764%" height="15" fill="rgb(216,46,15)" fg:x="6505" fg:w="5"/><text x="99.6996%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="99.5261%" y="85" width="0.0153%" height="15" fill="rgb(250,74,19)" fg:x="6510" fg:w="1"/><text x="99.7761%" y="95.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (41 samples, 0.63%)</title><rect x="99.0980%" y="101" width="0.6268%" height="15" fill="rgb(249,42,33)" fg:x="6482" fg:w="41"/><text x="99.3480%" y="111.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (12 samples, 0.18%)</title><rect x="99.5414%" y="85" width="0.1835%" height="15" fill="rgb(242,149,17)" fg:x="6511" fg:w="12"/><text x="99.7914%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="99.6942%" y="69" width="0.0306%" height="15" fill="rgb(244,29,21)" fg:x="6521" fg:w="2"/><text x="99.9442%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="99.7095%" y="53" width="0.0153%" height="15" fill="rgb(220,130,37)" fg:x="6522" fg:w="1"/><text x="99.9595%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="99.7095%" y="37" width="0.0153%" height="15" fill="rgb(211,67,2)" fg:x="6522" fg:w="1"/><text x="99.9595%" y="47.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (9 samples, 0.14%)</title><rect x="99.7248%" y="101" width="0.1376%" height="15" fill="rgb(235,68,52)" fg:x="6523" fg:w="9"/><text x="99.9748%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.06%)</title><rect x="99.8013%" y="85" width="0.0612%" height="15" fill="rgb(246,142,3)" fg:x="6528" fg:w="4"/><text x="100.0513%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="99.8471%" y="69" width="0.0153%" height="15" fill="rgb(241,25,7)" fg:x="6531" fg:w="1"/><text x="100.0971%" y="79.50"></text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,533 samples, 99.88%)</title><rect x="0.0000%" y="597" width="99.8777%" height="15" fill="rgb(242,119,39)" fg:x="0" fg:w="6533"/><text x="0.2500%" y="607.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,530 samples, 99.83%)</title><rect x="0.0459%" y="581" width="99.8318%" height="15" fill="rgb(241,98,45)" fg:x="3" fg:w="6530"/><text x="0.2959%" y="591.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,529 samples, 99.82%)</title><rect x="0.0612%" y="565" width="99.8165%" height="15" fill="rgb(254,28,30)" fg:x="4" fg:w="6529"/><text x="0.3112%" y="575.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,525 samples, 99.76%)</title><rect x="0.1223%" y="549" width="99.7554%" height="15" fill="rgb(241,142,54)" fg:x="8" fg:w="6525"/><text x="0.3723%" y="559.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,522 samples, 99.71%)</title><rect x="0.1682%" y="533" width="99.7095%" height="15" fill="rgb(222,85,15)" fg:x="11" fg:w="6522"/><text x="0.4182%" y="543.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,522 samples, 99.71%)</title><rect x="0.1682%" y="517" width="99.7095%" height="15" fill="rgb(210,85,47)" fg:x="11" fg:w="6522"/><text x="0.4182%" y="527.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,519 samples, 99.66%)</title><rect x="0.2140%" y="501" width="99.6637%" height="15" fill="rgb(224,206,25)" fg:x="14" fg:w="6519"/><text x="0.4640%" y="511.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,517 samples, 99.63%)</title><rect x="0.2446%" y="485" width="99.6331%" height="15" fill="rgb(243,201,19)" fg:x="16" fg:w="6517"/><text x="0.4946%" y="495.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,515 samples, 99.60%)</title><rect x="0.2752%" y="469" width="99.6025%" height="15" fill="rgb(236,59,4)" fg:x="18" fg:w="6515"/><text x="0.5252%" y="479.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,514 samples, 99.59%)</title><rect x="0.2905%" y="453" width="99.5872%" height="15" fill="rgb(254,179,45)" fg:x="19" fg:w="6514"/><text x="0.5405%" y="463.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,512 samples, 99.56%)</title><rect x="0.3211%" y="437" width="99.5566%" height="15" fill="rgb(226,14,10)" fg:x="21" fg:w="6512"/><text x="0.5711%" y="447.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,510 samples, 99.53%)</title><rect x="0.3516%" y="421" width="99.5261%" height="15" fill="rgb(244,27,41)" fg:x="23" fg:w="6510"/><text x="0.6016%" y="431.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,508 samples, 99.50%)</title><rect x="0.3822%" y="405" width="99.4955%" height="15" fill="rgb(235,35,32)" fg:x="25" fg:w="6508"/><text x="0.6322%" y="415.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,506 samples, 99.46%)</title><rect x="0.4128%" y="389" width="99.4649%" height="15" fill="rgb(218,68,31)" fg:x="27" fg:w="6506"/><text x="0.6628%" y="399.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,506 samples, 99.46%)</title><rect x="0.4128%" y="373" width="99.4649%" height="15" fill="rgb(207,120,37)" fg:x="27" fg:w="6506"/><text x="0.6628%" y="383.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,506 samples, 99.46%)</title><rect x="0.4128%" y="357" width="99.4649%" height="15" fill="rgb(227,98,0)" fg:x="27" fg:w="6506"/><text x="0.6628%" y="367.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,506 samples, 99.46%)</title><rect x="0.4128%" y="341" width="99.4649%" height="15" fill="rgb(207,7,3)" fg:x="27" fg:w="6506"/><text x="0.6628%" y="351.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,505 samples, 99.45%)</title><rect x="0.4281%" y="325" width="99.4496%" height="15" fill="rgb(206,98,19)" fg:x="28" fg:w="6505"/><text x="0.6781%" y="335.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,505 samples, 99.45%)</title><rect x="0.4281%" y="309" width="99.4496%" height="15" fill="rgb(217,5,26)" fg:x="28" fg:w="6505"/><text x="0.6781%" y="319.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,505 samples, 99.45%)</title><rect x="0.4281%" y="293" width="99.4496%" height="15" fill="rgb(235,190,38)" fg:x="28" fg:w="6505"/><text x="0.6781%" y="303.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,505 samples, 99.45%)</title><rect x="0.4281%" y="277" width="99.4496%" height="15" fill="rgb(247,86,24)" fg:x="28" fg:w="6505"/><text x="0.6781%" y="287.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,504 samples, 99.43%)</title><rect x="0.4434%" y="261" width="99.4343%" height="15" fill="rgb(205,101,16)" fg:x="29" fg:w="6504"/><text x="0.6934%" y="271.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,498 samples, 99.34%)</title><rect x="0.5351%" y="245" width="99.3426%" height="15" fill="rgb(246,168,33)" fg:x="35" fg:w="6498"/><text x="0.7851%" y="255.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,479 samples, 99.05%)</title><rect x="0.8256%" y="229" width="99.0521%" height="15" fill="rgb(231,114,1)" fg:x="54" fg:w="6479"/><text x="1.0756%" y="239.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,409 samples, 97.98%)</title><rect x="1.8957%" y="213" width="97.9820%" height="15" fill="rgb(207,184,53)" fg:x="124" fg:w="6409"/><text x="2.1457%" y="223.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,154 samples, 94.08%)</title><rect x="5.7942%" y="197" width="94.0835%" height="15" fill="rgb(224,95,51)" fg:x="379" fg:w="6154"/><text x="6.0442%" y="207.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (5,404 samples, 82.62%)</title><rect x="17.2604%" y="181" width="82.6173%" height="15" fill="rgb(212,188,45)" fg:x="1129" fg:w="5404"/><text x="17.5104%" y="191.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (4,050 samples, 61.92%)</title><rect x="37.9606%" y="165" width="61.9171%" height="15" fill="rgb(223,154,38)" fg:x="2483" fg:w="4050"/><text x="38.2106%" y="175.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (2,216 samples, 33.88%)</title><rect x="65.9991%" y="149" width="33.8786%" height="15" fill="rgb(251,22,52)" fg:x="4317" fg:w="2216"/><text x="66.2491%" y="159.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (612 samples, 9.36%)</title><rect x="90.5213%" y="133" width="9.3564%" height="15" fill="rgb(229,209,22)" fg:x="5921" fg:w="612"/><text x="90.7713%" y="143.50">peg-solitaire..</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (56 samples, 0.86%)</title><rect x="99.0216%" y="117" width="0.8561%" height="15" fill="rgb(234,138,34)" fg:x="6477" fg:w="56"/><text x="99.2716%" y="127.50"></text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (1 samples, 0.02%)</title><rect x="99.8624%" y="101" width="0.0153%" height="15" fill="rgb(212,95,11)" fg:x="6532" fg:w="1"/><text x="100.1124%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="99.8624%" y="85" width="0.0153%" height="15" fill="rgb(240,179,47)" fg:x="6532" fg:w="1"/><text x="100.1124%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.8624%" y="69" width="0.0153%" height="15" fill="rgb(240,163,11)" fg:x="6532" fg:w="1"/><text x="100.1124%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.8624%" y="53" width="0.0153%" height="15" fill="rgb(236,37,12)" fg:x="6532" fg:w="1"/><text x="100.1124%" y="63.50"></text></g><g><title>peg-solitaire`peg_solitaire::main (6,540 samples, 99.98%)</title><rect x="0.0000%" y="613" width="99.9847%" height="15" fill="rgb(232,164,16)" fg:x="0" fg:w="6540"/><text x="0.2500%" y="623.50">peg-solitaire`peg_solitaire::main</text></g><g><title>peg-solitaire`std::io::stdio::_print (7 samples, 0.11%)</title><rect x="99.8777%" y="597" width="0.1070%" height="15" fill="rgb(244,205,15)" fg:x="6533" fg:w="7"/><text x="100.1277%" y="607.50"></text></g><g><title>peg-solitaire`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7 samples, 0.11%)</title><rect x="99.8777%" y="581" width="0.1070%" height="15" fill="rgb(223,117,47)" fg:x="6533" fg:w="7"/><text x="100.1277%" y="591.50"></text></g><g><title>peg-solitaire`core::fmt::write (7 samples, 0.11%)</title><rect x="99.8777%" y="565" width="0.1070%" height="15" fill="rgb(244,107,35)" fg:x="6533" fg:w="7"/><text x="100.1277%" y="575.50"></text></g><g><title>peg-solitaire`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.11%)</title><rect x="99.8777%" y="549" width="0.1070%" height="15" fill="rgb(205,140,8)" fg:x="6533" fg:w="7"/><text x="100.1277%" y="559.50"></text></g><g><title>peg-solitaire`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (7 samples, 0.11%)</title><rect x="99.8777%" y="533" width="0.1070%" height="15" fill="rgb(228,84,46)" fg:x="6533" fg:w="7"/><text x="100.1277%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`write (7 samples, 0.11%)</title><rect x="99.8777%" y="517" width="0.1070%" height="15" fill="rgb(254,188,9)" fg:x="6533" fg:w="7"/><text x="100.1277%" y="527.50"></text></g><g><title>all (6,541 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(206,112,54)" fg:x="0" fg:w="6541"/><text x="0.2500%" y="719.50"></text></g><g><title>dyld`start (6,541 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(216,84,49)" fg:x="0" fg:w="6541"/><text x="0.2500%" y="703.50">dyld`start</text></g><g><title>peg-solitaire`main (6,541 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(214,194,35)" fg:x="0" fg:w="6541"/><text x="0.2500%" y="687.50">peg-solitaire`main</text></g><g><title>peg-solitaire`std::rt::lang_start_internal (6,541 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(249,28,3)" fg:x="0" fg:w="6541"/><text x="0.2500%" y="671.50">peg-solitaire`std::rt::lang_start_internal</text></g><g><title>peg-solitaire`std::rt::lang_start::_{{closure}} (6,541 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="6541"/><text x="0.2500%" y="655.50">peg-solitaire`std::rt::lang_start::_{{closure}}</text></g><g><title>peg-solitaire`std::sys_common::backtrace::__rust_begin_short_backtrace (6,541 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(245,217,50)" fg:x="0" fg:w="6541"/><text x="0.2500%" y="639.50">peg-solitaire`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>peg-solitaire`std::time::Instant::elapsed (1 samples, 0.02%)</title><rect x="99.9847%" y="613" width="0.0153%" height="15" fill="rgb(213,201,24)" fg:x="6540" fg:w="1"/><text x="100.2347%" y="623.50"></text></g></svg></svg>