<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="7803"><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.01%)</title><rect x="0.0000%" y="629" width="0.0128%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.01%)</title><rect x="0.0000%" y="613" width="0.0128%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.0000%" y="597" width="0.0128%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.0000%" y="581" width="0.0128%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="0.0000%" y="565" width="0.0128%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="0.0000%" y="549" width="0.0128%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="0.0000%" y="533" width="0.0128%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="0.0000%" y="517" width="0.0128%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="0.0000%" y="501" width="0.0128%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="0.0000%" y="485" width="0.0128%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.01%)</title><rect x="0.0128%" y="613" width="0.0128%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.2628%" y="623.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.0128%" y="597" width="0.0128%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.2628%" y="607.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.0128%" y="581" width="0.0128%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.2628%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="0.0128%" y="565" width="0.0128%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.2628%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="0.0128%" y="549" width="0.0128%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.2628%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="0.0256%" y="581" width="0.0128%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.2756%" y="591.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.0256%" y="597" width="0.0256%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="2"/><text x="0.2756%" y="607.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.0384%" y="581" width="0.0128%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.2884%" y="591.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.0384%" y="565" width="0.0128%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.2884%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="0.0384%" y="549" width="0.0128%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="0.2884%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="0.0384%" y="533" width="0.0128%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="0.2884%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="0.0384%" y="517" width="0.0128%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="0.2884%" y="527.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.0513%" y="581" width="0.0256%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="2"/><text x="0.3013%" y="591.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.01%)</title><rect x="0.0641%" y="565" width="0.0128%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="0.3141%" y="575.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.0769%" y="565" width="0.0256%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="2"/><text x="0.3269%" y="575.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.01%)</title><rect x="0.0897%" y="549" width="0.0128%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="0.3397%" y="559.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.0897%" y="533" width="0.0128%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="0.3397%" y="543.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.0897%" y="517" width="0.0128%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="0.3397%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="0.0897%" y="501" width="0.0128%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="0.3397%" y="511.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.01%)</title><rect x="0.1025%" y="549" width="0.0128%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="1"/><text x="0.3525%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.04%)</title><rect x="0.1153%" y="517" width="0.0384%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="3"/><text x="0.3653%" y="527.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (4 samples, 0.05%)</title><rect x="0.1153%" y="533" width="0.0513%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="4"/><text x="0.3653%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="0.1538%" y="517" width="0.0128%" height="15" fill="rgb(213,181,19)" fg:x="12" fg:w="1"/><text x="0.4038%" y="527.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.1794%" y="501" width="0.0128%" height="15" fill="rgb(254,191,54)" fg:x="14" fg:w="1"/><text x="0.4294%" y="511.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.1794%" y="485" width="0.0128%" height="15" fill="rgb(241,83,37)" fg:x="14" fg:w="1"/><text x="0.4294%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="0.1794%" y="469" width="0.0128%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="1"/><text x="0.4294%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="0.1794%" y="453" width="0.0128%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="1"/><text x="0.4294%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="0.1794%" y="437" width="0.0128%" height="15" fill="rgb(245,192,40)" fg:x="14" fg:w="1"/><text x="0.4294%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="0.1794%" y="421" width="0.0128%" height="15" fill="rgb(238,167,29)" fg:x="14" fg:w="1"/><text x="0.4294%" y="431.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (3 samples, 0.04%)</title><rect x="0.1666%" y="517" width="0.0384%" height="15" fill="rgb(232,182,51)" fg:x="13" fg:w="3"/><text x="0.4166%" y="527.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.01%)</title><rect x="0.1922%" y="501" width="0.0128%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="1"/><text x="0.4422%" y="511.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.1922%" y="485" width="0.0128%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="1"/><text x="0.4422%" y="495.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.1922%" y="469" width="0.0128%" height="15" fill="rgb(235,93,37)" fg:x="15" fg:w="1"/><text x="0.4422%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="0.1922%" y="453" width="0.0128%" height="15" fill="rgb(213,116,39)" fg:x="15" fg:w="1"/><text x="0.4422%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="0.1922%" y="437" width="0.0128%" height="15" fill="rgb(222,207,29)" fg:x="15" fg:w="1"/><text x="0.4422%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="0.1922%" y="421" width="0.0128%" height="15" fill="rgb(206,96,30)" fg:x="15" fg:w="1"/><text x="0.4422%" y="431.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.01%)</title><rect x="0.2050%" y="501" width="0.0128%" height="15" fill="rgb(218,138,4)" fg:x="16" fg:w="1"/><text x="0.4550%" y="511.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.01%)</title><rect x="0.2050%" y="485" width="0.0128%" height="15" fill="rgb(250,191,14)" fg:x="16" fg:w="1"/><text x="0.4550%" y="495.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.2050%" y="469" width="0.0128%" height="15" fill="rgb(239,60,40)" fg:x="16" fg:w="1"/><text x="0.4550%" y="479.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.2050%" y="453" width="0.0128%" height="15" fill="rgb(206,27,48)" fg:x="16" fg:w="1"/><text x="0.4550%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="0.2050%" y="437" width="0.0128%" height="15" fill="rgb(225,35,8)" fg:x="16" fg:w="1"/><text x="0.4550%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="0.2050%" y="421" width="0.0128%" height="15" fill="rgb(250,213,24)" fg:x="16" fg:w="1"/><text x="0.4550%" y="431.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.01%)</title><rect x="0.2179%" y="485" width="0.0128%" height="15" fill="rgb(247,123,22)" fg:x="17" fg:w="1"/><text x="0.4679%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="0.2307%" y="469" width="0.0128%" height="15" fill="rgb(231,138,38)" fg:x="18" fg:w="1"/><text x="0.4807%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="0.2307%" y="453" width="0.0128%" height="15" fill="rgb(231,145,46)" fg:x="18" fg:w="1"/><text x="0.4807%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="0.2307%" y="437" width="0.0128%" height="15" fill="rgb(251,118,11)" fg:x="18" fg:w="1"/><text x="0.4807%" y="447.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (2 samples, 0.03%)</title><rect x="0.2435%" y="453" width="0.0256%" height="15" fill="rgb(217,147,25)" fg:x="19" fg:w="2"/><text x="0.4935%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="0.2563%" y="437" width="0.0128%" height="15" fill="rgb(247,81,37)" fg:x="20" fg:w="1"/><text x="0.5063%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="0.2563%" y="421" width="0.0128%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="1"/><text x="0.5063%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="0.2819%" y="421" width="0.0128%" height="15" fill="rgb(227,1,9)" fg:x="22" fg:w="1"/><text x="0.5319%" y="431.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (3 samples, 0.04%)</title><rect x="0.2691%" y="437" width="0.0384%" height="15" fill="rgb(248,47,43)" fg:x="21" fg:w="3"/><text x="0.5191%" y="447.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.01%)</title><rect x="0.2948%" y="421" width="0.0128%" height="15" fill="rgb(221,10,30)" fg:x="23" fg:w="1"/><text x="0.5448%" y="431.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.2948%" y="405" width="0.0128%" height="15" fill="rgb(210,229,1)" fg:x="23" fg:w="1"/><text x="0.5448%" y="415.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.2948%" y="389" width="0.0128%" height="15" fill="rgb(222,148,37)" fg:x="23" fg:w="1"/><text x="0.5448%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="0.2948%" y="373" width="0.0128%" height="15" fill="rgb(234,67,33)" fg:x="23" fg:w="1"/><text x="0.5448%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="0.2948%" y="357" width="0.0128%" height="15" fill="rgb(247,98,35)" fg:x="23" fg:w="1"/><text x="0.5448%" y="367.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.01%)</title><rect x="0.3076%" y="421" width="0.0128%" height="15" fill="rgb(247,138,52)" fg:x="24" fg:w="1"/><text x="0.5576%" y="431.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.3204%" y="405" width="0.0128%" height="15" fill="rgb(213,79,30)" fg:x="25" fg:w="1"/><text x="0.5704%" y="415.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.3204%" y="389" width="0.0128%" height="15" fill="rgb(246,177,23)" fg:x="25" fg:w="1"/><text x="0.5704%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="0.3204%" y="373" width="0.0128%" height="15" fill="rgb(230,62,27)" fg:x="25" fg:w="1"/><text x="0.5704%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="0.3204%" y="357" width="0.0128%" height="15" fill="rgb(216,154,8)" fg:x="25" fg:w="1"/><text x="0.5704%" y="367.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.01%)</title><rect x="0.3332%" y="405" width="0.0128%" height="15" fill="rgb(244,35,45)" fg:x="26" fg:w="1"/><text x="0.5832%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="0.3460%" y="373" width="0.0128%" height="15" fill="rgb(251,115,12)" fg:x="27" fg:w="1"/><text x="0.5960%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="0.3460%" y="357" width="0.0128%" height="15" fill="rgb(240,54,50)" fg:x="27" fg:w="1"/><text x="0.5960%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="0.3717%" y="293" width="0.0128%" height="15" fill="rgb(233,84,52)" fg:x="29" fg:w="1"/><text x="0.6217%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="0.3717%" y="277" width="0.0128%" height="15" fill="rgb(207,117,47)" fg:x="29" fg:w="1"/><text x="0.6217%" y="287.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (4 samples, 0.05%)</title><rect x="0.3460%" y="389" width="0.0513%" height="15" fill="rgb(249,43,39)" fg:x="27" fg:w="4"/><text x="0.5960%" y="399.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (3 samples, 0.04%)</title><rect x="0.3588%" y="373" width="0.0384%" height="15" fill="rgb(209,38,44)" fg:x="28" fg:w="3"/><text x="0.6088%" y="383.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="0.3717%" y="357" width="0.0256%" height="15" fill="rgb(236,212,23)" fg:x="29" fg:w="2"/><text x="0.6217%" y="367.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="0.3717%" y="341" width="0.0256%" height="15" fill="rgb(242,79,21)" fg:x="29" fg:w="2"/><text x="0.6217%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="0.3717%" y="325" width="0.0256%" height="15" fill="rgb(211,96,35)" fg:x="29" fg:w="2"/><text x="0.6217%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="0.3717%" y="309" width="0.0256%" height="15" fill="rgb(253,215,40)" fg:x="29" fg:w="2"/><text x="0.6217%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="0.3845%" y="293" width="0.0128%" height="15" fill="rgb(211,81,21)" fg:x="30" fg:w="1"/><text x="0.6345%" y="303.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1 samples, 0.01%)</title><rect x="0.3973%" y="373" width="0.0128%" height="15" fill="rgb(208,190,38)" fg:x="31" fg:w="1"/><text x="0.6473%" y="383.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.3973%" y="357" width="0.0128%" height="15" fill="rgb(235,213,38)" fg:x="31" fg:w="1"/><text x="0.6473%" y="367.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.3973%" y="341" width="0.0128%" height="15" fill="rgb(237,122,38)" fg:x="31" fg:w="1"/><text x="0.6473%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="0.3973%" y="325" width="0.0128%" height="15" fill="rgb(244,218,35)" fg:x="31" fg:w="1"/><text x="0.6473%" y="335.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (1 samples, 0.01%)</title><rect x="0.4101%" y="325" width="0.0128%" height="15" fill="rgb(240,68,47)" fg:x="32" fg:w="1"/><text x="0.6601%" y="335.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (1 samples, 0.01%)</title><rect x="0.4229%" y="309" width="0.0128%" height="15" fill="rgb(210,16,53)" fg:x="33" fg:w="1"/><text x="0.6729%" y="319.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.4357%" y="293" width="0.0128%" height="15" fill="rgb(235,124,12)" fg:x="34" fg:w="1"/><text x="0.6857%" y="303.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.4357%" y="277" width="0.0128%" height="15" fill="rgb(224,169,11)" fg:x="34" fg:w="1"/><text x="0.6857%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="0.4357%" y="261" width="0.0128%" height="15" fill="rgb(250,166,2)" fg:x="34" fg:w="1"/><text x="0.6857%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="0.4357%" y="245" width="0.0128%" height="15" fill="rgb(242,216,29)" fg:x="34" fg:w="1"/><text x="0.6857%" y="255.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (3 samples, 0.04%)</title><rect x="0.4357%" y="309" width="0.0384%" height="15" fill="rgb(230,116,27)" fg:x="34" fg:w="3"/><text x="0.6857%" y="319.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (2 samples, 0.03%)</title><rect x="0.4485%" y="293" width="0.0256%" height="15" fill="rgb(228,99,48)" fg:x="35" fg:w="2"/><text x="0.6985%" y="303.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.4614%" y="277" width="0.0128%" height="15" fill="rgb(253,11,6)" fg:x="36" fg:w="1"/><text x="0.7114%" y="287.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (1 samples, 0.01%)</title><rect x="0.4742%" y="293" width="0.0128%" height="15" fill="rgb(247,143,39)" fg:x="37" fg:w="1"/><text x="0.7242%" y="303.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (3 samples, 0.04%)</title><rect x="0.4870%" y="293" width="0.0384%" height="15" fill="rgb(236,97,10)" fg:x="38" fg:w="3"/><text x="0.7370%" y="303.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (2 samples, 0.03%)</title><rect x="0.4998%" y="277" width="0.0256%" height="15" fill="rgb(233,208,19)" fg:x="39" fg:w="2"/><text x="0.7498%" y="287.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.5126%" y="261" width="0.0128%" height="15" fill="rgb(216,164,2)" fg:x="40" fg:w="1"/><text x="0.7626%" y="271.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.5126%" y="245" width="0.0128%" height="15" fill="rgb(220,129,5)" fg:x="40" fg:w="1"/><text x="0.7626%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="0.5126%" y="229" width="0.0128%" height="15" fill="rgb(242,17,10)" fg:x="40" fg:w="1"/><text x="0.7626%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="0.5126%" y="213" width="0.0128%" height="15" fill="rgb(242,107,0)" fg:x="40" fg:w="1"/><text x="0.7626%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="0.5254%" y="277" width="0.0128%" height="15" fill="rgb(251,28,31)" fg:x="41" fg:w="1"/><text x="0.7754%" y="287.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="0.5383%" y="277" width="0.0128%" height="15" fill="rgb(233,223,10)" fg:x="42" fg:w="1"/><text x="0.7883%" y="287.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.5511%" y="277" width="0.0128%" height="15" fill="rgb(215,21,27)" fg:x="43" fg:w="1"/><text x="0.8011%" y="287.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.5511%" y="261" width="0.0128%" height="15" fill="rgb(232,23,21)" fg:x="43" fg:w="1"/><text x="0.8011%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="0.5511%" y="245" width="0.0128%" height="15" fill="rgb(244,5,23)" fg:x="43" fg:w="1"/><text x="0.8011%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="0.5511%" y="229" width="0.0128%" height="15" fill="rgb(226,81,46)" fg:x="43" fg:w="1"/><text x="0.8011%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="0.5511%" y="213" width="0.0128%" height="15" fill="rgb(247,70,30)" fg:x="43" fg:w="1"/><text x="0.8011%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="0.5511%" y="197" width="0.0128%" height="15" fill="rgb(212,68,19)" fg:x="43" fg:w="1"/><text x="0.8011%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="0.5511%" y="181" width="0.0128%" height="15" fill="rgb(240,187,13)" fg:x="43" fg:w="1"/><text x="0.8011%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="0.5511%" y="165" width="0.0128%" height="15" fill="rgb(223,113,26)" fg:x="43" fg:w="1"/><text x="0.8011%" y="175.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (3 samples, 0.04%)</title><rect x="0.5639%" y="277" width="0.0384%" height="15" fill="rgb(206,192,2)" fg:x="44" fg:w="3"/><text x="0.8139%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="0.6792%" y="261" width="0.0128%" height="15" fill="rgb(241,108,4)" fg:x="53" fg:w="1"/><text x="0.9292%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="0.6920%" y="229" width="0.0128%" height="15" fill="rgb(247,173,49)" fg:x="54" fg:w="1"/><text x="0.9420%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="0.6920%" y="213" width="0.0128%" height="15" fill="rgb(224,114,35)" fg:x="54" fg:w="1"/><text x="0.9420%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="0.6920%" y="197" width="0.0128%" height="15" fill="rgb(245,159,27)" fg:x="54" fg:w="1"/><text x="0.9420%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="0.6920%" y="181" width="0.0128%" height="15" fill="rgb(245,172,44)" fg:x="54" fg:w="1"/><text x="0.9420%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.03%)</title><rect x="0.7049%" y="229" width="0.0256%" height="15" fill="rgb(236,23,11)" fg:x="55" fg:w="2"/><text x="0.9549%" y="239.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.05%)</title><rect x="0.6920%" y="261" width="0.0513%" height="15" fill="rgb(205,117,38)" fg:x="54" fg:w="4"/><text x="0.9420%" y="271.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="0.6920%" y="245" width="0.0513%" height="15" fill="rgb(237,72,25)" fg:x="54" fg:w="4"/><text x="0.9420%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="0.7305%" y="229" width="0.0128%" height="15" fill="rgb(244,70,9)" fg:x="57" fg:w="1"/><text x="0.9805%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="0.7305%" y="213" width="0.0128%" height="15" fill="rgb(217,125,39)" fg:x="57" fg:w="1"/><text x="0.9805%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="0.7305%" y="197" width="0.0128%" height="15" fill="rgb(235,36,10)" fg:x="57" fg:w="1"/><text x="0.9805%" y="207.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (15 samples, 0.19%)</title><rect x="0.6023%" y="277" width="0.1922%" height="15" fill="rgb(251,123,47)" fg:x="47" fg:w="15"/><text x="0.8523%" y="287.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (4 samples, 0.05%)</title><rect x="0.7433%" y="261" width="0.0513%" height="15" fill="rgb(221,13,13)" fg:x="58" fg:w="4"/><text x="0.9933%" y="271.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.7818%" y="245" width="0.0128%" height="15" fill="rgb(238,131,9)" fg:x="61" fg:w="1"/><text x="1.0318%" y="255.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.7818%" y="229" width="0.0128%" height="15" fill="rgb(211,50,8)" fg:x="61" fg:w="1"/><text x="1.0318%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="0.7818%" y="213" width="0.0128%" height="15" fill="rgb(245,182,24)" fg:x="61" fg:w="1"/><text x="1.0318%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="0.7818%" y="197" width="0.0128%" height="15" fill="rgb(242,14,37)" fg:x="61" fg:w="1"/><text x="1.0318%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.03%)</title><rect x="0.8458%" y="261" width="0.0256%" height="15" fill="rgb(246,228,12)" fg:x="66" fg:w="2"/><text x="1.0958%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.05%)</title><rect x="0.8715%" y="261" width="0.0513%" height="15" fill="rgb(213,55,15)" fg:x="68" fg:w="4"/><text x="1.1215%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="0.9099%" y="245" width="0.0128%" height="15" fill="rgb(209,9,3)" fg:x="71" fg:w="1"/><text x="1.1599%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.03%)</title><rect x="0.9227%" y="261" width="0.0256%" height="15" fill="rgb(230,59,30)" fg:x="72" fg:w="2"/><text x="1.1727%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="0.9484%" y="261" width="0.0128%" height="15" fill="rgb(209,121,21)" fg:x="74" fg:w="1"/><text x="1.1984%" y="271.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (4 samples, 0.05%)</title><rect x="0.9612%" y="261" width="0.0513%" height="15" fill="rgb(220,109,13)" fg:x="75" fg:w="4"/><text x="1.2112%" y="271.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="1.0124%" y="261" width="0.0128%" height="15" fill="rgb(232,18,1)" fg:x="79" fg:w="1"/><text x="1.2624%" y="271.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (6 samples, 0.08%)</title><rect x="1.0252%" y="261" width="0.0769%" height="15" fill="rgb(215,41,42)" fg:x="80" fg:w="6"/><text x="1.2752%" y="271.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (4 samples, 0.05%)</title><rect x="1.0509%" y="245" width="0.0513%" height="15" fill="rgb(224,123,36)" fg:x="82" fg:w="4"/><text x="1.3009%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.06%)</title><rect x="1.4866%" y="245" width="0.0641%" height="15" fill="rgb(240,125,3)" fg:x="116" fg:w="5"/><text x="1.7366%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.06%)</title><rect x="1.4866%" y="229" width="0.0641%" height="15" fill="rgb(205,98,50)" fg:x="116" fg:w="5"/><text x="1.7366%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.03%)</title><rect x="1.5507%" y="245" width="0.0256%" height="15" fill="rgb(205,185,37)" fg:x="121" fg:w="2"/><text x="1.8007%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="1.5763%" y="245" width="0.0128%" height="15" fill="rgb(238,207,15)" fg:x="123" fg:w="1"/><text x="1.8263%" y="255.50"></text></g><g><title>peg-solitaire`__rdl_alloc (2 samples, 0.03%)</title><rect x="1.6148%" y="229" width="0.0256%" height="15" fill="rgb(213,199,42)" fg:x="126" fg:w="2"/><text x="1.8648%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.19%)</title><rect x="1.6404%" y="213" width="0.1922%" height="15" fill="rgb(235,201,11)" fg:x="128" fg:w="15"/><text x="1.8904%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.13%)</title><rect x="1.7045%" y="197" width="0.1282%" height="15" fill="rgb(207,46,11)" fg:x="133" fg:w="10"/><text x="1.9545%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.12%)</title><rect x="1.7173%" y="181" width="0.1153%" height="15" fill="rgb(241,35,35)" fg:x="134" fg:w="9"/><text x="1.9673%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="1.8198%" y="165" width="0.0128%" height="15" fill="rgb(243,32,47)" fg:x="142" fg:w="1"/><text x="2.0698%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.04%)</title><rect x="1.8326%" y="213" width="0.0384%" height="15" fill="rgb(247,202,23)" fg:x="143" fg:w="3"/><text x="2.0826%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="1.8839%" y="181" width="0.0128%" height="15" fill="rgb(219,102,11)" fg:x="147" fg:w="1"/><text x="2.1339%" y="191.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (27 samples, 0.35%)</title><rect x="1.5891%" y="245" width="0.3460%" height="15" fill="rgb(243,110,44)" fg:x="124" fg:w="27"/><text x="1.8391%" y="255.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (23 samples, 0.29%)</title><rect x="1.6404%" y="229" width="0.2948%" height="15" fill="rgb(222,74,54)" fg:x="128" fg:w="23"/><text x="1.8904%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.06%)</title><rect x="1.8711%" y="213" width="0.0641%" height="15" fill="rgb(216,99,12)" fg:x="146" fg:w="5"/><text x="2.1211%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.06%)</title><rect x="1.8711%" y="197" width="0.0641%" height="15" fill="rgb(226,22,26)" fg:x="146" fg:w="5"/><text x="2.1211%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.04%)</title><rect x="1.8967%" y="181" width="0.0384%" height="15" fill="rgb(217,163,10)" fg:x="148" fg:w="3"/><text x="2.1467%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="1.8967%" y="165" width="0.0384%" height="15" fill="rgb(213,25,53)" fg:x="148" fg:w="3"/><text x="2.1467%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="1.9095%" y="149" width="0.0256%" height="15" fill="rgb(252,105,26)" fg:x="149" fg:w="2"/><text x="2.1595%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="1.9223%" y="133" width="0.0128%" height="15" fill="rgb(220,39,43)" fg:x="150" fg:w="1"/><text x="2.1723%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="2.0761%" y="197" width="0.0128%" height="15" fill="rgb(229,68,48)" fg:x="162" fg:w="1"/><text x="2.3261%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="2.0761%" y="181" width="0.0128%" height="15" fill="rgb(252,8,32)" fg:x="162" fg:w="1"/><text x="2.3261%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="2.0761%" y="165" width="0.0128%" height="15" fill="rgb(223,20,43)" fg:x="162" fg:w="1"/><text x="2.3261%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="2.1274%" y="165" width="0.0128%" height="15" fill="rgb(229,81,49)" fg:x="166" fg:w="1"/><text x="2.3774%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="2.1530%" y="149" width="0.0128%" height="15" fill="rgb(236,28,36)" fg:x="168" fg:w="1"/><text x="2.4030%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (6 samples, 0.08%)</title><rect x="2.1402%" y="165" width="0.0769%" height="15" fill="rgb(249,185,26)" fg:x="167" fg:w="6"/><text x="2.3902%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.05%)</title><rect x="2.1658%" y="149" width="0.0513%" height="15" fill="rgb(249,174,33)" fg:x="169" fg:w="4"/><text x="2.4158%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="2.1786%" y="133" width="0.0384%" height="15" fill="rgb(233,201,37)" fg:x="170" fg:w="3"/><text x="2.4286%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.21%)</title><rect x="2.0633%" y="229" width="0.2050%" height="15" fill="rgb(221,78,26)" fg:x="161" fg:w="16"/><text x="2.3133%" y="239.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (15 samples, 0.19%)</title><rect x="2.0761%" y="213" width="0.1922%" height="15" fill="rgb(250,127,30)" fg:x="162" fg:w="15"/><text x="2.3261%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (14 samples, 0.18%)</title><rect x="2.0889%" y="197" width="0.1794%" height="15" fill="rgb(230,49,44)" fg:x="163" fg:w="14"/><text x="2.3389%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (12 samples, 0.15%)</title><rect x="2.1146%" y="181" width="0.1538%" height="15" fill="rgb(229,67,23)" fg:x="165" fg:w="12"/><text x="2.3646%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.05%)</title><rect x="2.2171%" y="165" width="0.0513%" height="15" fill="rgb(249,83,47)" fg:x="173" fg:w="4"/><text x="2.4671%" y="175.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (92 samples, 1.18%)</title><rect x="1.1021%" y="261" width="1.1790%" height="15" fill="rgb(215,43,3)" fg:x="86" fg:w="92"/><text x="1.3521%" y="271.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (27 samples, 0.35%)</title><rect x="1.9352%" y="245" width="0.3460%" height="15" fill="rgb(238,154,13)" fg:x="151" fg:w="27"/><text x="2.1852%" y="255.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="2.2684%" y="229" width="0.0128%" height="15" fill="rgb(219,56,2)" fg:x="177" fg:w="1"/><text x="2.5184%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.03%)</title><rect x="2.4606%" y="245" width="0.0256%" height="15" fill="rgb(233,0,4)" fg:x="192" fg:w="2"/><text x="2.7106%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.12%)</title><rect x="2.4862%" y="245" width="0.1153%" height="15" fill="rgb(235,30,7)" fg:x="194" fg:w="9"/><text x="2.7362%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="2.5887%" y="229" width="0.0128%" height="15" fill="rgb(250,79,13)" fg:x="202" fg:w="1"/><text x="2.8387%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.04%)</title><rect x="2.6016%" y="245" width="0.0384%" height="15" fill="rgb(211,146,34)" fg:x="203" fg:w="3"/><text x="2.8516%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.03%)</title><rect x="2.6400%" y="245" width="0.0256%" height="15" fill="rgb(228,22,38)" fg:x="206" fg:w="2"/><text x="2.8900%" y="255.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (2 samples, 0.03%)</title><rect x="2.6656%" y="245" width="0.0256%" height="15" fill="rgb(235,168,5)" fg:x="208" fg:w="2"/><text x="2.9156%" y="255.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="2.6913%" y="245" width="0.0256%" height="15" fill="rgb(221,155,16)" fg:x="210" fg:w="2"/><text x="2.9413%" y="255.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (14 samples, 0.18%)</title><rect x="2.7169%" y="245" width="0.1794%" height="15" fill="rgb(215,215,53)" fg:x="212" fg:w="14"/><text x="2.9669%" y="255.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (4 samples, 0.05%)</title><rect x="2.8451%" y="229" width="0.0513%" height="15" fill="rgb(223,4,10)" fg:x="222" fg:w="4"/><text x="3.0951%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.45%)</title><rect x="4.2548%" y="229" width="0.4485%" height="15" fill="rgb(234,103,6)" fg:x="332" fg:w="35"/><text x="4.5048%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.21%)</title><rect x="4.4983%" y="213" width="0.2050%" height="15" fill="rgb(227,97,0)" fg:x="351" fg:w="16"/><text x="4.7483%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.15%)</title><rect x="4.7033%" y="229" width="0.1538%" height="15" fill="rgb(234,150,53)" fg:x="367" fg:w="12"/><text x="4.9533%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="4.8571%" y="229" width="0.0128%" height="15" fill="rgb(228,201,54)" fg:x="379" fg:w="1"/><text x="5.1071%" y="239.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (2 samples, 0.03%)</title><rect x="4.9724%" y="213" width="0.0256%" height="15" fill="rgb(222,22,37)" fg:x="388" fg:w="2"/><text x="5.2224%" y="223.50"></text></g><g><title>peg-solitaire`__rdl_alloc (2 samples, 0.03%)</title><rect x="4.9981%" y="213" width="0.0256%" height="15" fill="rgb(237,53,32)" fg:x="390" fg:w="2"/><text x="5.2481%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="5.1390%" y="181" width="0.0128%" height="15" fill="rgb(233,25,53)" fg:x="401" fg:w="1"/><text x="5.3890%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.19%)</title><rect x="5.2159%" y="165" width="0.1922%" height="15" fill="rgb(210,40,34)" fg:x="407" fg:w="15"/><text x="5.4659%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.04%)</title><rect x="5.3697%" y="149" width="0.0384%" height="15" fill="rgb(241,220,44)" fg:x="419" fg:w="3"/><text x="5.6197%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.36%)</title><rect x="5.0750%" y="197" width="0.3588%" height="15" fill="rgb(235,28,35)" fg:x="396" fg:w="28"/><text x="5.3250%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.28%)</title><rect x="5.1519%" y="181" width="0.2819%" height="15" fill="rgb(210,56,17)" fg:x="402" fg:w="22"/><text x="5.4019%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="5.4082%" y="165" width="0.0256%" height="15" fill="rgb(224,130,29)" fg:x="422" fg:w="2"/><text x="5.6582%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.06%)</title><rect x="5.4338%" y="197" width="0.0641%" height="15" fill="rgb(235,212,8)" fg:x="424" fg:w="5"/><text x="5.6838%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="5.4979%" y="165" width="0.0128%" height="15" fill="rgb(223,33,50)" fg:x="429" fg:w="1"/><text x="5.7479%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="5.5107%" y="149" width="0.0128%" height="15" fill="rgb(219,149,13)" fg:x="430" fg:w="1"/><text x="5.7607%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="5.5107%" y="133" width="0.0128%" height="15" fill="rgb(250,156,29)" fg:x="430" fg:w="1"/><text x="5.7607%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (53 samples, 0.68%)</title><rect x="4.8699%" y="229" width="0.6792%" height="15" fill="rgb(216,193,19)" fg:x="380" fg:w="53"/><text x="5.1199%" y="239.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (41 samples, 0.53%)</title><rect x="5.0237%" y="213" width="0.5254%" height="15" fill="rgb(216,135,14)" fg:x="392" fg:w="41"/><text x="5.2737%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.05%)</title><rect x="5.4979%" y="197" width="0.0513%" height="15" fill="rgb(241,47,5)" fg:x="429" fg:w="4"/><text x="5.7479%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.05%)</title><rect x="5.4979%" y="181" width="0.0513%" height="15" fill="rgb(233,42,35)" fg:x="429" fg:w="4"/><text x="5.7479%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.04%)</title><rect x="5.5107%" y="165" width="0.0384%" height="15" fill="rgb(231,13,6)" fg:x="430" fg:w="3"/><text x="5.7607%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.03%)</title><rect x="5.5235%" y="149" width="0.0256%" height="15" fill="rgb(207,181,40)" fg:x="431" fg:w="2"/><text x="5.7735%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="5.5491%" y="229" width="0.0128%" height="15" fill="rgb(254,173,49)" fg:x="433" fg:w="1"/><text x="5.7991%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="5.9080%" y="197" width="0.0256%" height="15" fill="rgb(221,1,38)" fg:x="461" fg:w="2"/><text x="6.1580%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.06%)</title><rect x="5.9464%" y="181" width="0.0641%" height="15" fill="rgb(206,124,46)" fg:x="464" fg:w="5"/><text x="6.1964%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="5.9849%" y="165" width="0.0256%" height="15" fill="rgb(249,21,11)" fg:x="467" fg:w="2"/><text x="6.2349%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="5.9849%" y="149" width="0.0256%" height="15" fill="rgb(222,201,40)" fg:x="467" fg:w="2"/><text x="6.2349%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.01%)</title><rect x="6.0105%" y="165" width="0.0128%" height="15" fill="rgb(235,61,29)" fg:x="469" fg:w="1"/><text x="6.2605%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="6.0361%" y="149" width="0.0128%" height="15" fill="rgb(219,207,3)" fg:x="471" fg:w="1"/><text x="6.2861%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.03%)</title><rect x="6.0490%" y="149" width="0.0256%" height="15" fill="rgb(222,56,46)" fg:x="472" fg:w="2"/><text x="6.2990%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (1 samples, 0.01%)</title><rect x="6.1002%" y="133" width="0.0128%" height="15" fill="rgb(239,76,54)" fg:x="476" fg:w="1"/><text x="6.3502%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.04%)</title><rect x="6.1130%" y="133" width="0.0384%" height="15" fill="rgb(231,124,27)" fg:x="477" fg:w="3"/><text x="6.3630%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="6.1515%" y="117" width="0.0384%" height="15" fill="rgb(249,195,6)" fg:x="480" fg:w="3"/><text x="6.4015%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.05%)</title><rect x="6.1515%" y="133" width="0.0513%" height="15" fill="rgb(237,174,47)" fg:x="480" fg:w="4"/><text x="6.4015%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="6.1899%" y="117" width="0.0128%" height="15" fill="rgb(206,201,31)" fg:x="483" fg:w="1"/><text x="6.4399%" y="127.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (259 samples, 3.32%)</title><rect x="2.8963%" y="245" width="3.3192%" height="15" fill="rgb(231,57,52)" fg:x="226" fg:w="259"/><text x="3.1463%" y="255.50">peg..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (51 samples, 0.65%)</title><rect x="5.5620%" y="229" width="0.6536%" height="15" fill="rgb(248,177,22)" fg:x="434" fg:w="51"/><text x="5.8120%" y="239.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.36%)</title><rect x="5.8567%" y="213" width="0.3588%" height="15" fill="rgb(215,211,37)" fg:x="457" fg:w="28"/><text x="6.1067%" y="223.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (22 samples, 0.28%)</title><rect x="5.9336%" y="197" width="0.2819%" height="15" fill="rgb(241,128,51)" fg:x="463" fg:w="22"/><text x="6.1836%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (16 samples, 0.21%)</title><rect x="6.0105%" y="181" width="0.2050%" height="15" fill="rgb(227,165,31)" fg:x="469" fg:w="16"/><text x="6.2605%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (15 samples, 0.19%)</title><rect x="6.0233%" y="165" width="0.1922%" height="15" fill="rgb(228,167,24)" fg:x="470" fg:w="15"/><text x="6.2733%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (11 samples, 0.14%)</title><rect x="6.0746%" y="149" width="0.1410%" height="15" fill="rgb(228,143,12)" fg:x="474" fg:w="11"/><text x="6.3246%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="6.2027%" y="133" width="0.0128%" height="15" fill="rgb(249,149,8)" fg:x="484" fg:w="1"/><text x="6.4527%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (1 samples, 0.01%)</title><rect x="6.2156%" y="245" width="0.0128%" height="15" fill="rgb(243,35,44)" fg:x="485" fg:w="1"/><text x="6.4656%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.12%)</title><rect x="6.4591%" y="229" width="0.1153%" height="15" fill="rgb(246,89,9)" fg:x="504" fg:w="9"/><text x="6.7091%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.29%)</title><rect x="6.5744%" y="229" width="0.2948%" height="15" fill="rgb(233,213,13)" fg:x="513" fg:w="23"/><text x="6.8244%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.04%)</title><rect x="6.8307%" y="213" width="0.0384%" height="15" fill="rgb(233,141,41)" fg:x="533" fg:w="3"/><text x="7.0807%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (10 samples, 0.13%)</title><rect x="6.8692%" y="229" width="0.1282%" height="15" fill="rgb(239,167,4)" fg:x="536" fg:w="10"/><text x="7.1192%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.12%)</title><rect x="6.9973%" y="229" width="0.1153%" height="15" fill="rgb(209,217,16)" fg:x="546" fg:w="9"/><text x="7.2473%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="7.1126%" y="229" width="0.0128%" height="15" fill="rgb(219,88,35)" fg:x="555" fg:w="1"/><text x="7.3626%" y="239.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (8 samples, 0.10%)</title><rect x="7.1255%" y="229" width="0.1025%" height="15" fill="rgb(220,193,23)" fg:x="556" fg:w="8"/><text x="7.3755%" y="239.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.04%)</title><rect x="7.2280%" y="229" width="0.0384%" height="15" fill="rgb(230,90,52)" fg:x="564" fg:w="3"/><text x="7.4780%" y="239.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (33 samples, 0.42%)</title><rect x="7.2664%" y="229" width="0.4229%" height="15" fill="rgb(252,106,19)" fg:x="567" fg:w="33"/><text x="7.5164%" y="239.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (12 samples, 0.15%)</title><rect x="7.5356%" y="213" width="0.1538%" height="15" fill="rgb(206,74,20)" fg:x="588" fg:w="12"/><text x="7.7856%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (97 samples, 1.24%)</title><rect x="11.1367%" y="213" width="1.2431%" height="15" fill="rgb(230,138,44)" fg:x="869" fg:w="97"/><text x="11.3867%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (36 samples, 0.46%)</title><rect x="11.9185%" y="197" width="0.4614%" height="15" fill="rgb(235,182,43)" fg:x="930" fg:w="36"/><text x="12.1685%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.06%)</title><rect x="12.3799%" y="213" width="0.0641%" height="15" fill="rgb(242,16,51)" fg:x="966" fg:w="5"/><text x="12.6299%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.35%)</title><rect x="12.4439%" y="213" width="0.3460%" height="15" fill="rgb(248,9,4)" fg:x="971" fg:w="27"/><text x="12.6939%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.10%)</title><rect x="12.7900%" y="213" width="0.1025%" height="15" fill="rgb(210,31,22)" fg:x="998" fg:w="8"/><text x="13.0400%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="13.0847%" y="197" width="0.0256%" height="15" fill="rgb(239,54,39)" fg:x="1021" fg:w="2"/><text x="13.3347%" y="207.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (4 samples, 0.05%)</title><rect x="13.1103%" y="197" width="0.0513%" height="15" fill="rgb(230,99,41)" fg:x="1023" fg:w="4"/><text x="13.3603%" y="207.50"></text></g><g><title>peg-solitaire`__rdl_alloc (3 samples, 0.04%)</title><rect x="13.1616%" y="197" width="0.0384%" height="15" fill="rgb(253,106,12)" fg:x="1027" fg:w="3"/><text x="13.4116%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="13.6486%" y="165" width="0.0384%" height="15" fill="rgb(213,46,41)" fg:x="1065" fg:w="3"/><text x="13.8986%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (45 samples, 0.58%)</title><rect x="13.9434%" y="149" width="0.5767%" height="15" fill="rgb(215,133,35)" fg:x="1088" fg:w="45"/><text x="14.1934%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.13%)</title><rect x="14.3919%" y="133" width="0.1282%" height="15" fill="rgb(213,28,5)" fg:x="1123" fg:w="10"/><text x="14.6419%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (99 samples, 1.27%)</title><rect x="13.3026%" y="181" width="1.2687%" height="15" fill="rgb(215,77,49)" fg:x="1038" fg:w="99"/><text x="13.5526%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (69 samples, 0.88%)</title><rect x="13.6870%" y="165" width="0.8843%" height="15" fill="rgb(248,100,22)" fg:x="1068" fg:w="69"/><text x="13.9370%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.05%)</title><rect x="14.5201%" y="149" width="0.0513%" height="15" fill="rgb(208,67,9)" fg:x="1133" fg:w="4"/><text x="14.7701%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.08%)</title><rect x="14.5713%" y="181" width="0.0769%" height="15" fill="rgb(219,133,21)" fg:x="1137" fg:w="6"/><text x="14.8213%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="14.6482%" y="181" width="0.0384%" height="15" fill="rgb(246,46,29)" fg:x="1143" fg:w="3"/><text x="14.8982%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="14.6867%" y="165" width="0.0256%" height="15" fill="rgb(246,185,52)" fg:x="1146" fg:w="2"/><text x="14.9367%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.03%)</title><rect x="14.6867%" y="149" width="0.0256%" height="15" fill="rgb(252,136,11)" fg:x="1146" fg:w="2"/><text x="14.9367%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="14.6995%" y="133" width="0.0128%" height="15" fill="rgb(219,138,53)" fg:x="1147" fg:w="1"/><text x="14.9495%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (143 samples, 1.83%)</title><rect x="12.8925%" y="213" width="1.8326%" height="15" fill="rgb(211,51,23)" fg:x="1006" fg:w="143"/><text x="13.1425%" y="223.50">p..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (119 samples, 1.53%)</title><rect x="13.2001%" y="197" width="1.5251%" height="15" fill="rgb(247,221,28)" fg:x="1030" fg:w="119"/><text x="13.4501%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.04%)</title><rect x="14.6867%" y="181" width="0.0384%" height="15" fill="rgb(251,222,45)" fg:x="1146" fg:w="3"/><text x="14.9367%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="14.7123%" y="165" width="0.0128%" height="15" fill="rgb(217,162,53)" fg:x="1148" fg:w="1"/><text x="14.9623%" y="175.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="14.7251%" y="213" width="0.0513%" height="15" fill="rgb(229,93,14)" fg:x="1149" fg:w="4"/><text x="14.9751%" y="223.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="15.6863%" y="181" width="0.0128%" height="15" fill="rgb(209,67,49)" fg:x="1224" fg:w="1"/><text x="15.9363%" y="191.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$realloc (1 samples, 0.01%)</title><rect x="15.6991%" y="181" width="0.0128%" height="15" fill="rgb(213,87,29)" fg:x="1225" fg:w="1"/><text x="15.9491%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="15.8401%" y="133" width="0.0384%" height="15" fill="rgb(205,151,52)" fg:x="1236" fg:w="3"/><text x="16.0901%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="15.8529%" y="117" width="0.0256%" height="15" fill="rgb(253,215,39)" fg:x="1237" fg:w="2"/><text x="16.1029%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.14%)</title><rect x="15.7632%" y="165" width="0.1410%" height="15" fill="rgb(221,220,41)" fg:x="1230" fg:w="11"/><text x="16.0132%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.08%)</title><rect x="15.8272%" y="149" width="0.0769%" height="15" fill="rgb(218,133,21)" fg:x="1235" fg:w="6"/><text x="16.0772%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="15.8785%" y="133" width="0.0256%" height="15" fill="rgb(221,193,43)" fg:x="1239" fg:w="2"/><text x="16.1285%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.04%)</title><rect x="15.9041%" y="165" width="0.0384%" height="15" fill="rgb(240,128,52)" fg:x="1241" fg:w="3"/><text x="16.1541%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="15.9426%" y="165" width="0.0128%" height="15" fill="rgb(253,114,12)" fg:x="1244" fg:w="1"/><text x="16.1926%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.01%)</title><rect x="15.9810%" y="149" width="0.0128%" height="15" fill="rgb(215,223,47)" fg:x="1247" fg:w="1"/><text x="16.2310%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="16.0067%" y="133" width="0.0128%" height="15" fill="rgb(248,225,23)" fg:x="1249" fg:w="1"/><text x="16.2567%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (1 samples, 0.01%)</title><rect x="16.0195%" y="133" width="0.0128%" height="15" fill="rgb(250,108,0)" fg:x="1250" fg:w="1"/><text x="16.2695%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.09%)</title><rect x="16.0323%" y="133" width="0.0897%" height="15" fill="rgb(228,208,7)" fg:x="1251" fg:w="7"/><text x="16.2823%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="16.1605%" y="117" width="0.0128%" height="15" fill="rgb(244,45,10)" fg:x="1261" fg:w="1"/><text x="16.4105%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (1 samples, 0.01%)</title><rect x="16.1733%" y="117" width="0.0128%" height="15" fill="rgb(207,125,25)" fg:x="1262" fg:w="1"/><text x="16.4233%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.04%)</title><rect x="16.1861%" y="117" width="0.0384%" height="15" fill="rgb(210,195,18)" fg:x="1263" fg:w="3"/><text x="16.4361%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.06%)</title><rect x="16.2630%" y="101" width="0.0641%" height="15" fill="rgb(249,80,12)" fg:x="1269" fg:w="5"/><text x="16.5130%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.04%)</title><rect x="16.2886%" y="85" width="0.0384%" height="15" fill="rgb(221,65,9)" fg:x="1271" fg:w="3"/><text x="16.5386%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.12%)</title><rect x="16.2245%" y="117" width="0.1153%" height="15" fill="rgb(235,49,36)" fg:x="1266" fg:w="9"/><text x="16.4745%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="16.3271%" y="101" width="0.0128%" height="15" fill="rgb(225,32,20)" fg:x="1274" fg:w="1"/><text x="16.5771%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (24 samples, 0.31%)</title><rect x="16.1220%" y="133" width="0.3076%" height="15" fill="rgb(215,141,46)" fg:x="1258" fg:w="24"/><text x="16.3720%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.09%)</title><rect x="16.3399%" y="117" width="0.0897%" height="15" fill="rgb(250,160,47)" fg:x="1275" fg:w="7"/><text x="16.5899%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (36 samples, 0.46%)</title><rect x="15.9938%" y="149" width="0.4614%" height="15" fill="rgb(216,222,40)" fg:x="1248" fg:w="36"/><text x="16.2438%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="16.4296%" y="133" width="0.0256%" height="15" fill="rgb(234,217,39)" fg:x="1282" fg:w="2"/><text x="16.6796%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.09%)</title><rect x="16.4552%" y="149" width="0.0897%" height="15" fill="rgb(207,178,40)" fg:x="1284" fg:w="7"/><text x="16.7052%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (72 samples, 0.92%)</title><rect x="15.6350%" y="197" width="0.9227%" height="15" fill="rgb(221,136,13)" fg:x="1220" fg:w="72"/><text x="15.8850%" y="207.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (66 samples, 0.85%)</title><rect x="15.7119%" y="181" width="0.8458%" height="15" fill="rgb(249,199,10)" fg:x="1226" fg:w="66"/><text x="15.9619%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (47 samples, 0.60%)</title><rect x="15.9554%" y="165" width="0.6023%" height="15" fill="rgb(249,222,13)" fg:x="1245" fg:w="47"/><text x="16.2054%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="16.5449%" y="149" width="0.0128%" height="15" fill="rgb(244,185,38)" fg:x="1291" fg:w="1"/><text x="16.7949%" y="159.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (693 samples, 8.88%)</title><rect x="7.6894%" y="229" width="8.8812%" height="15" fill="rgb(236,202,9)" fg:x="600" fg:w="693"/><text x="7.9394%" y="239.50">peg-solitaire..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (140 samples, 1.79%)</title><rect x="14.7764%" y="213" width="1.7942%" height="15" fill="rgb(250,229,37)" fg:x="1153" fg:w="140"/><text x="15.0264%" y="223.50">p..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="16.5577%" y="197" width="0.0128%" height="15" fill="rgb(206,174,23)" fg:x="1292" fg:w="1"/><text x="16.8077%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="16.6474%" y="181" width="0.0128%" height="15" fill="rgb(211,33,43)" fg:x="1299" fg:w="1"/><text x="16.8974%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="16.6474%" y="165" width="0.0128%" height="15" fill="rgb(245,58,50)" fg:x="1299" fg:w="1"/><text x="16.8974%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="16.6474%" y="149" width="0.0128%" height="15" fill="rgb(244,68,36)" fg:x="1299" fg:w="1"/><text x="16.8974%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="16.6731%" y="149" width="0.0128%" height="15" fill="rgb(232,229,15)" fg:x="1301" fg:w="1"/><text x="16.9231%" y="159.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (10 samples, 0.13%)</title><rect x="16.5705%" y="229" width="0.1282%" height="15" fill="rgb(254,30,23)" fg:x="1293" fg:w="10"/><text x="16.8205%" y="239.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.05%)</title><rect x="16.6474%" y="213" width="0.0513%" height="15" fill="rgb(235,160,14)" fg:x="1299" fg:w="4"/><text x="16.8974%" y="223.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="16.6474%" y="197" width="0.0513%" height="15" fill="rgb(212,155,44)" fg:x="1299" fg:w="4"/><text x="16.8974%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.04%)</title><rect x="16.6603%" y="181" width="0.0384%" height="15" fill="rgb(226,2,50)" fg:x="1300" fg:w="3"/><text x="16.9103%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="16.6731%" y="165" width="0.0256%" height="15" fill="rgb(234,177,6)" fg:x="1301" fg:w="2"/><text x="16.9231%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="16.6859%" y="149" width="0.0128%" height="15" fill="rgb(217,24,9)" fg:x="1302" fg:w="1"/><text x="16.9359%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="16.6859%" y="133" width="0.0128%" height="15" fill="rgb(220,13,46)" fg:x="1302" fg:w="1"/><text x="16.9359%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (28 samples, 0.36%)</title><rect x="17.3139%" y="213" width="0.3588%" height="15" fill="rgb(239,221,27)" fg:x="1351" fg:w="28"/><text x="17.5639%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.51%)</title><rect x="17.6727%" y="213" width="0.5126%" height="15" fill="rgb(222,198,25)" fg:x="1379" fg:w="40"/><text x="17.9227%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.10%)</title><rect x="18.0828%" y="197" width="0.1025%" height="15" fill="rgb(211,99,13)" fg:x="1411" fg:w="8"/><text x="18.3328%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (22 samples, 0.28%)</title><rect x="18.1853%" y="213" width="0.2819%" height="15" fill="rgb(232,111,31)" fg:x="1419" fg:w="22"/><text x="18.4353%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (23 samples, 0.29%)</title><rect x="18.4673%" y="213" width="0.2948%" height="15" fill="rgb(245,82,37)" fg:x="1441" fg:w="23"/><text x="18.7173%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="18.7620%" y="213" width="0.0128%" height="15" fill="rgb(227,149,46)" fg:x="1464" fg:w="1"/><text x="19.0120%" y="223.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (18 samples, 0.23%)</title><rect x="18.7748%" y="213" width="0.2307%" height="15" fill="rgb(218,36,50)" fg:x="1465" fg:w="18"/><text x="19.0248%" y="223.50"></text></g><g><title>peg-solitaire`__rdl_dealloc (1 samples, 0.01%)</title><rect x="19.0055%" y="213" width="0.0128%" height="15" fill="rgb(226,80,48)" fg:x="1483" fg:w="1"/><text x="19.2555%" y="223.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.13%)</title><rect x="19.0183%" y="213" width="0.1282%" height="15" fill="rgb(238,224,15)" fg:x="1484" fg:w="10"/><text x="19.2683%" y="223.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (46 samples, 0.59%)</title><rect x="19.1465%" y="213" width="0.5895%" height="15" fill="rgb(241,136,10)" fg:x="1494" fg:w="46"/><text x="19.3965%" y="223.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (19 samples, 0.24%)</title><rect x="19.4925%" y="197" width="0.2435%" height="15" fill="rgb(208,32,45)" fg:x="1521" fg:w="19"/><text x="19.7425%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (167 samples, 2.14%)</title><rect x="26.3104%" y="197" width="2.1402%" height="15" fill="rgb(207,135,9)" fg:x="2053" fg:w="167"/><text x="26.5604%" y="207.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (67 samples, 0.86%)</title><rect x="27.5920%" y="181" width="0.8586%" height="15" fill="rgb(206,86,44)" fg:x="2153" fg:w="67"/><text x="27.8420%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.06%)</title><rect x="28.4506%" y="197" width="0.0641%" height="15" fill="rgb(245,177,15)" fg:x="2220" fg:w="5"/><text x="28.7006%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (72 samples, 0.92%)</title><rect x="28.5147%" y="197" width="0.9227%" height="15" fill="rgb(206,64,50)" fg:x="2225" fg:w="72"/><text x="28.7647%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (16 samples, 0.21%)</title><rect x="29.4374%" y="197" width="0.2050%" height="15" fill="rgb(234,36,40)" fg:x="2297" fg:w="16"/><text x="29.6874%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="30.0397%" y="181" width="0.0256%" height="15" fill="rgb(213,64,8)" fg:x="2344" fg:w="2"/><text x="30.2897%" y="191.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (13 samples, 0.17%)</title><rect x="30.0654%" y="181" width="0.1666%" height="15" fill="rgb(210,75,36)" fg:x="2346" fg:w="13"/><text x="30.3154%" y="191.50"></text></g><g><title>peg-solitaire`__rdl_alloc (7 samples, 0.09%)</title><rect x="30.2320%" y="181" width="0.0897%" height="15" fill="rgb(229,88,21)" fg:x="2359" fg:w="7"/><text x="30.4820%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.10%)</title><rect x="31.3469%" y="149" width="0.1025%" height="15" fill="rgb(252,204,47)" fg:x="2446" fg:w="8"/><text x="31.5969%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (95 samples, 1.22%)</title><rect x="31.7826%" y="133" width="1.2175%" height="15" fill="rgb(208,77,27)" fg:x="2480" fg:w="95"/><text x="32.0326%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (20 samples, 0.26%)</title><rect x="32.7438%" y="117" width="0.2563%" height="15" fill="rgb(221,76,26)" fg:x="2555" fg:w="20"/><text x="32.9938%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (216 samples, 2.77%)</title><rect x="30.5395%" y="165" width="2.7682%" height="15" fill="rgb(225,139,18)" fg:x="2383" fg:w="216"/><text x="30.7895%" y="175.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (145 samples, 1.86%)</title><rect x="31.4494%" y="149" width="1.8583%" height="15" fill="rgb(230,137,11)" fg:x="2454" fg:w="145"/><text x="31.6994%" y="159.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (24 samples, 0.31%)</title><rect x="33.0001%" y="133" width="0.3076%" height="15" fill="rgb(212,28,1)" fg:x="2575" fg:w="24"/><text x="33.2501%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (16 samples, 0.21%)</title><rect x="33.3077%" y="165" width="0.2050%" height="15" fill="rgb(248,164,17)" fg:x="2599" fg:w="16"/><text x="33.5577%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.09%)</title><rect x="33.5128%" y="165" width="0.0897%" height="15" fill="rgb(222,171,42)" fg:x="2615" fg:w="7"/><text x="33.7628%" y="175.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (310 samples, 3.97%)</title><rect x="29.6424%" y="197" width="3.9728%" height="15" fill="rgb(243,84,45)" fg:x="2313" fg:w="310"/><text x="29.8924%" y="207.50">peg-..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (257 samples, 3.29%)</title><rect x="30.3217%" y="181" width="3.2936%" height="15" fill="rgb(252,49,23)" fg:x="2366" fg:w="257"/><text x="30.5717%" y="191.50">peg..</text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="33.6025%" y="165" width="0.0128%" height="15" fill="rgb(215,19,7)" fg:x="2622" fg:w="1"/><text x="33.8525%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="33.6025%" y="149" width="0.0128%" height="15" fill="rgb(238,81,41)" fg:x="2622" fg:w="1"/><text x="33.8525%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="33.6025%" y="133" width="0.0128%" height="15" fill="rgb(210,199,37)" fg:x="2622" fg:w="1"/><text x="33.8525%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (9 samples, 0.12%)</title><rect x="33.6153%" y="197" width="0.1153%" height="15" fill="rgb(244,192,49)" fg:x="2623" fg:w="9"/><text x="33.8653%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="35.5761%" y="165" width="0.0128%" height="15" fill="rgb(226,211,11)" fg:x="2776" fg:w="1"/><text x="35.8261%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="35.5889%" y="165" width="0.0128%" height="15" fill="rgb(236,162,54)" fg:x="2777" fg:w="1"/><text x="35.8389%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$realloc (4 samples, 0.05%)</title><rect x="35.6017%" y="165" width="0.0513%" height="15" fill="rgb(220,229,9)" fg:x="2778" fg:w="4"/><text x="35.8517%" y="175.50"></text></g><g><title>peg-solitaire`__rdl_alloc (2 samples, 0.03%)</title><rect x="35.6530%" y="165" width="0.0256%" height="15" fill="rgb(250,87,22)" fg:x="2782" fg:w="2"/><text x="35.9030%" y="175.50"></text></g><g><title>peg-solitaire`__rdl_realloc (1 samples, 0.01%)</title><rect x="35.6786%" y="165" width="0.0128%" height="15" fill="rgb(239,43,17)" fg:x="2784" fg:w="1"/><text x="35.9286%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="35.8452%" y="133" width="0.0384%" height="15" fill="rgb(231,177,25)" fg:x="2797" fg:w="3"/><text x="36.0952%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.18%)</title><rect x="35.8836%" y="117" width="0.1794%" height="15" fill="rgb(219,179,1)" fg:x="2800" fg:w="14"/><text x="36.1336%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.06%)</title><rect x="35.9990%" y="101" width="0.0641%" height="15" fill="rgb(238,219,53)" fg:x="2809" fg:w="5"/><text x="36.2490%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.32%)</title><rect x="35.7555%" y="149" width="0.3204%" height="15" fill="rgb(232,167,36)" fg:x="2790" fg:w="25"/><text x="36.0055%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.19%)</title><rect x="35.8836%" y="133" width="0.1922%" height="15" fill="rgb(244,19,51)" fg:x="2800" fg:w="15"/><text x="36.1336%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="36.0631%" y="117" width="0.0128%" height="15" fill="rgb(224,6,22)" fg:x="2814" fg:w="1"/><text x="36.3131%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.04%)</title><rect x="36.0759%" y="149" width="0.0384%" height="15" fill="rgb(224,145,5)" fg:x="2815" fg:w="3"/><text x="36.3259%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="36.1143%" y="149" width="0.0128%" height="15" fill="rgb(234,130,49)" fg:x="2818" fg:w="1"/><text x="36.3643%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="36.1271%" y="149" width="0.0256%" height="15" fill="rgb(254,6,2)" fg:x="2819" fg:w="2"/><text x="36.3771%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.04%)</title><rect x="36.1528%" y="149" width="0.0384%" height="15" fill="rgb(208,96,46)" fg:x="2821" fg:w="3"/><text x="36.4028%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (2 samples, 0.03%)</title><rect x="36.3450%" y="133" width="0.0256%" height="15" fill="rgb(239,3,39)" fg:x="2836" fg:w="2"/><text x="36.5950%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="36.4603%" y="117" width="0.0128%" height="15" fill="rgb(233,210,1)" fg:x="2845" fg:w="1"/><text x="36.7103%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (2 samples, 0.03%)</title><rect x="36.4732%" y="117" width="0.0256%" height="15" fill="rgb(244,137,37)" fg:x="2846" fg:w="2"/><text x="36.7232%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="36.4988%" y="117" width="0.0128%" height="15" fill="rgb(240,136,2)" fg:x="2848" fg:w="1"/><text x="36.7488%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="36.5116%" y="117" width="0.0128%" height="15" fill="rgb(239,18,37)" fg:x="2849" fg:w="1"/><text x="36.7616%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.17%)</title><rect x="36.5244%" y="117" width="0.1666%" height="15" fill="rgb(218,185,22)" fg:x="2850" fg:w="13"/><text x="36.7744%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="36.7679%" y="101" width="0.0256%" height="15" fill="rgb(225,218,4)" fg:x="2869" fg:w="2"/><text x="37.0179%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (1 samples, 0.01%)</title><rect x="36.7935%" y="101" width="0.0128%" height="15" fill="rgb(230,182,32)" fg:x="2871" fg:w="1"/><text x="37.0435%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.13%)</title><rect x="36.8064%" y="101" width="0.1282%" height="15" fill="rgb(242,56,43)" fg:x="2872" fg:w="10"/><text x="37.0564%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.18%)</title><rect x="37.0370%" y="85" width="0.1794%" height="15" fill="rgb(233,99,24)" fg:x="2890" fg:w="14"/><text x="37.2870%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="37.2036%" y="69" width="0.0128%" height="15" fill="rgb(234,209,42)" fg:x="2903" fg:w="1"/><text x="37.4536%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.32%)</title><rect x="36.9345%" y="101" width="0.3204%" height="15" fill="rgb(227,7,12)" fg:x="2882" fg:w="25"/><text x="37.1845%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.04%)</title><rect x="37.2165%" y="85" width="0.0384%" height="15" fill="rgb(245,203,43)" fg:x="2904" fg:w="3"/><text x="37.4665%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (59 samples, 0.76%)</title><rect x="36.6910%" y="117" width="0.7561%" height="15" fill="rgb(238,205,33)" fg:x="2863" fg:w="59"/><text x="36.9410%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.19%)</title><rect x="37.2549%" y="101" width="0.1922%" height="15" fill="rgb(231,56,7)" fg:x="2907" fg:w="15"/><text x="37.5049%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (90 samples, 1.15%)</title><rect x="36.3706%" y="133" width="1.1534%" height="15" fill="rgb(244,186,29)" fg:x="2838" fg:w="90"/><text x="36.6206%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.08%)</title><rect x="37.4471%" y="117" width="0.0769%" height="15" fill="rgb(234,111,31)" fg:x="2922" fg:w="6"/><text x="37.6971%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.12%)</title><rect x="37.5240%" y="133" width="0.1153%" height="15" fill="rgb(241,149,10)" fg:x="2928" fg:w="9"/><text x="37.7740%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (169 samples, 2.17%)</title><rect x="35.4992%" y="181" width="2.1658%" height="15" fill="rgb(249,206,44)" fg:x="2770" fg:w="169"/><text x="35.7492%" y="191.50">p..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (154 samples, 1.97%)</title><rect x="35.6914%" y="165" width="1.9736%" height="15" fill="rgb(251,153,30)" fg:x="2785" fg:w="154"/><text x="35.9414%" y="175.50">p..</text></g><g><title>libsystem_malloc.dylib`realloc (115 samples, 1.47%)</title><rect x="36.1912%" y="149" width="1.4738%" height="15" fill="rgb(239,152,38)" fg:x="2824" fg:w="115"/><text x="36.4412%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.03%)</title><rect x="37.6394%" y="133" width="0.0256%" height="15" fill="rgb(249,139,47)" fg:x="2937" fg:w="2"/><text x="37.8894%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1,405 samples, 18.01%)</title><rect x="19.7360%" y="213" width="18.0059%" height="15" fill="rgb(244,64,35)" fg:x="1540" fg:w="1405"/><text x="19.9860%" y="223.50">peg-solitaire`peg_solitaire:..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (313 samples, 4.01%)</title><rect x="33.7306%" y="197" width="4.0113%" height="15" fill="rgb(216,46,15)" fg:x="2632" fg:w="313"/><text x="33.9806%" y="207.50">peg-..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (6 samples, 0.08%)</title><rect x="37.6650%" y="181" width="0.0769%" height="15" fill="rgb(250,74,19)" fg:x="2939" fg:w="6"/><text x="37.9150%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="38.0879%" y="181" width="0.0256%" height="15" fill="rgb(249,42,33)" fg:x="2972" fg:w="2"/><text x="38.3379%" y="191.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$realloc (1 samples, 0.01%)</title><rect x="38.1135%" y="181" width="0.0128%" height="15" fill="rgb(242,149,17)" fg:x="2974" fg:w="1"/><text x="38.3635%" y="191.50"></text></g><g><title>peg-solitaire`__rdl_realloc (1 samples, 0.01%)</title><rect x="38.1264%" y="181" width="0.0128%" height="15" fill="rgb(244,29,21)" fg:x="2975" fg:w="1"/><text x="38.3764%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="38.1520%" y="133" width="0.0384%" height="15" fill="rgb(220,130,37)" fg:x="2977" fg:w="3"/><text x="38.4020%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="38.1776%" y="117" width="0.0128%" height="15" fill="rgb(211,67,2)" fg:x="2979" fg:w="1"/><text x="38.4276%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.06%)</title><rect x="38.1392%" y="165" width="0.0641%" height="15" fill="rgb(235,68,52)" fg:x="2976" fg:w="5"/><text x="38.3892%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.05%)</title><rect x="38.1520%" y="149" width="0.0513%" height="15" fill="rgb(246,142,3)" fg:x="2977" fg:w="4"/><text x="38.4020%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="38.1904%" y="133" width="0.0128%" height="15" fill="rgb(241,25,7)" fg:x="2980" fg:w="1"/><text x="38.4404%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.04%)</title><rect x="38.2033%" y="165" width="0.0384%" height="15" fill="rgb(242,119,39)" fg:x="2981" fg:w="3"/><text x="38.4533%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="38.2930%" y="133" width="0.0128%" height="15" fill="rgb(241,98,45)" fg:x="2988" fg:w="1"/><text x="38.5430%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="38.3058%" y="133" width="0.0128%" height="15" fill="rgb(254,28,30)" fg:x="2989" fg:w="1"/><text x="38.5558%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.05%)</title><rect x="38.3186%" y="117" width="0.0513%" height="15" fill="rgb(241,142,54)" fg:x="2990" fg:w="4"/><text x="38.5686%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.08%)</title><rect x="38.3699%" y="117" width="0.0769%" height="15" fill="rgb(222,85,15)" fg:x="2994" fg:w="6"/><text x="38.6199%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="38.4211%" y="101" width="0.0256%" height="15" fill="rgb(210,85,47)" fg:x="2998" fg:w="2"/><text x="38.6711%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="38.4339%" y="85" width="0.0128%" height="15" fill="rgb(224,206,25)" fg:x="2999" fg:w="1"/><text x="38.6839%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (11 samples, 0.14%)</title><rect x="38.3186%" y="133" width="0.1410%" height="15" fill="rgb(243,201,19)" fg:x="2990" fg:w="11"/><text x="38.5686%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="38.4468%" y="117" width="0.0128%" height="15" fill="rgb(236,59,4)" fg:x="3000" fg:w="1"/><text x="38.6968%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (15 samples, 0.19%)</title><rect x="38.2801%" y="149" width="0.1922%" height="15" fill="rgb(254,179,45)" fg:x="2987" fg:w="15"/><text x="38.5301%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="38.4596%" y="133" width="0.0128%" height="15" fill="rgb(226,14,10)" fg:x="3001" fg:w="1"/><text x="38.7096%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (61 samples, 0.78%)</title><rect x="37.7419%" y="213" width="0.7818%" height="15" fill="rgb(244,27,41)" fg:x="2945" fg:w="61"/><text x="37.9919%" y="223.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (34 samples, 0.44%)</title><rect x="38.0879%" y="197" width="0.4357%" height="15" fill="rgb(235,35,32)" fg:x="2972" fg:w="34"/><text x="38.3379%" y="207.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (30 samples, 0.38%)</title><rect x="38.1392%" y="181" width="0.3845%" height="15" fill="rgb(218,68,31)" fg:x="2976" fg:w="30"/><text x="38.3892%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (22 samples, 0.28%)</title><rect x="38.2417%" y="165" width="0.2819%" height="15" fill="rgb(207,120,37)" fg:x="2984" fg:w="22"/><text x="38.4917%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.05%)</title><rect x="38.4724%" y="149" width="0.0513%" height="15" fill="rgb(227,98,0)" fg:x="3002" fg:w="4"/><text x="38.7224%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (30 samples, 0.38%)</title><rect x="39.1901%" y="197" width="0.3845%" height="15" fill="rgb(207,7,3)" fg:x="3058" fg:w="30"/><text x="39.4401%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (83 samples, 1.06%)</title><rect x="39.5745%" y="197" width="1.0637%" height="15" fill="rgb(206,98,19)" fg:x="3088" fg:w="83"/><text x="39.8245%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.21%)</title><rect x="40.4332%" y="181" width="0.2050%" height="15" fill="rgb(217,5,26)" fg:x="3155" fg:w="16"/><text x="40.6832%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (32 samples, 0.41%)</title><rect x="40.6382%" y="197" width="0.4101%" height="15" fill="rgb(235,190,38)" fg:x="3171" fg:w="32"/><text x="40.8882%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (25 samples, 0.32%)</title><rect x="41.0483%" y="197" width="0.3204%" height="15" fill="rgb(247,86,24)" fg:x="3203" fg:w="25"/><text x="41.2983%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.05%)</title><rect x="41.3687%" y="197" width="0.0513%" height="15" fill="rgb(205,101,16)" fg:x="3228" fg:w="4"/><text x="41.6187%" y="207.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (23 samples, 0.29%)</title><rect x="41.4200%" y="197" width="0.2948%" height="15" fill="rgb(246,168,33)" fg:x="3232" fg:w="23"/><text x="41.6700%" y="207.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.17%)</title><rect x="41.7147%" y="197" width="0.1666%" height="15" fill="rgb(231,114,1)" fg:x="3255" fg:w="13"/><text x="41.9647%" y="207.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (42 samples, 0.54%)</title><rect x="41.8813%" y="197" width="0.5383%" height="15" fill="rgb(207,184,53)" fg:x="3268" fg:w="42"/><text x="42.1313%" y="207.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (21 samples, 0.27%)</title><rect x="42.1505%" y="181" width="0.2691%" height="15" fill="rgb(224,95,51)" fg:x="3289" fg:w="21"/><text x="42.4005%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (227 samples, 2.91%)</title><rect x="50.8522%" y="181" width="2.9091%" height="15" fill="rgb(212,188,45)" fg:x="3968" fg:w="227"/><text x="51.1022%" y="191.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (98 samples, 1.26%)</title><rect x="52.5054%" y="165" width="1.2559%" height="15" fill="rgb(223,154,38)" fg:x="4097" fg:w="98"/><text x="52.7554%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (11 samples, 0.14%)</title><rect x="53.7614%" y="181" width="0.1410%" height="15" fill="rgb(251,22,52)" fg:x="4195" fg:w="11"/><text x="54.0114%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (85 samples, 1.09%)</title><rect x="53.9023%" y="181" width="1.0893%" height="15" fill="rgb(229,209,22)" fg:x="4206" fg:w="85"/><text x="54.1523%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (20 samples, 0.26%)</title><rect x="54.9917%" y="181" width="0.2563%" height="15" fill="rgb(234,138,34)" fg:x="4291" fg:w="20"/><text x="55.2417%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="55.7734%" y="165" width="0.0256%" height="15" fill="rgb(212,95,11)" fg:x="4352" fg:w="2"/><text x="56.0234%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (11 samples, 0.14%)</title><rect x="55.7991%" y="165" width="0.1410%" height="15" fill="rgb(240,179,47)" fg:x="4354" fg:w="11"/><text x="56.0491%" y="175.50"></text></g><g><title>peg-solitaire`__rdl_alloc (14 samples, 0.18%)</title><rect x="55.9400%" y="165" width="0.1794%" height="15" fill="rgb(240,163,11)" fg:x="4365" fg:w="14"/><text x="56.1900%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.23%)</title><rect x="57.4266%" y="133" width="0.2307%" height="15" fill="rgb(236,37,12)" fg:x="4481" fg:w="18"/><text x="57.6766%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (126 samples, 1.61%)</title><rect x="57.9649%" y="117" width="1.6148%" height="15" fill="rgb(232,164,16)" fg:x="4523" fg:w="126"/><text x="58.2149%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (33 samples, 0.42%)</title><rect x="59.1567%" y="101" width="0.4229%" height="15" fill="rgb(244,205,15)" fg:x="4616" fg:w="33"/><text x="59.4067%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (266 samples, 3.41%)</title><rect x="56.4142%" y="149" width="3.4089%" height="15" fill="rgb(223,117,47)" fg:x="4402" fg:w="266"/><text x="56.6642%" y="159.50">lib..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (169 samples, 2.17%)</title><rect x="57.6573%" y="133" width="2.1658%" height="15" fill="rgb(244,107,35)" fg:x="4499" fg:w="169"/><text x="57.9073%" y="143.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (19 samples, 0.24%)</title><rect x="59.5796%" y="117" width="0.2435%" height="15" fill="rgb(205,140,8)" fg:x="4649" fg:w="19"/><text x="59.8296%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (30 samples, 0.38%)</title><rect x="59.8231%" y="149" width="0.3845%" height="15" fill="rgb(228,84,46)" fg:x="4668" fg:w="30"/><text x="60.0731%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (394 samples, 5.05%)</title><rect x="55.2480%" y="181" width="5.0493%" height="15" fill="rgb(254,188,9)" fg:x="4311" fg:w="394"/><text x="55.4980%" y="191.50">peg-so..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (326 samples, 4.18%)</title><rect x="56.1194%" y="165" width="4.1779%" height="15" fill="rgb(206,112,54)" fg:x="4379" fg:w="326"/><text x="56.3694%" y="175.50">peg-s..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.09%)</title><rect x="60.2076%" y="149" width="0.0897%" height="15" fill="rgb(216,84,49)" fg:x="4698" fg:w="7"/><text x="60.4576%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (19 samples, 0.24%)</title><rect x="60.2973%" y="181" width="0.2435%" height="15" fill="rgb(214,194,35)" fg:x="4705" fg:w="19"/><text x="60.5473%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="62.7195%" y="149" width="0.0128%" height="15" fill="rgb(249,28,3)" fg:x="4894" fg:w="1"/><text x="62.9695%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="62.7323%" y="149" width="0.0128%" height="15" fill="rgb(222,56,52)" fg:x="4895" fg:w="1"/><text x="62.9823%" y="159.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$realloc (3 samples, 0.04%)</title><rect x="62.7451%" y="149" width="0.0384%" height="15" fill="rgb(245,217,50)" fg:x="4896" fg:w="3"/><text x="62.9951%" y="159.50"></text></g><g><title>peg-solitaire`__rdl_alloc (2 samples, 0.03%)</title><rect x="62.7835%" y="149" width="0.0256%" height="15" fill="rgb(213,201,24)" fg:x="4899" fg:w="2"/><text x="63.0335%" y="159.50"></text></g><g><title>peg-solitaire`__rdl_realloc (12 samples, 0.15%)</title><rect x="62.8092%" y="149" width="0.1538%" height="15" fill="rgb(248,116,28)" fg:x="4901" fg:w="12"/><text x="63.0592%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="63.2321%" y="117" width="0.0256%" height="15" fill="rgb(219,72,43)" fg:x="4934" fg:w="2"/><text x="63.4821%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (31 samples, 0.40%)</title><rect x="63.3346%" y="101" width="0.3973%" height="15" fill="rgb(209,138,14)" fg:x="4942" fg:w="31"/><text x="63.5846%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.08%)</title><rect x="63.6550%" y="85" width="0.0769%" height="15" fill="rgb(222,18,33)" fg:x="4967" fg:w="6"/><text x="63.9050%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (58 samples, 0.74%)</title><rect x="63.0270%" y="133" width="0.7433%" height="15" fill="rgb(213,199,7)" fg:x="4918" fg:w="58"/><text x="63.2770%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (40 samples, 0.51%)</title><rect x="63.2577%" y="117" width="0.5126%" height="15" fill="rgb(250,110,10)" fg:x="4936" fg:w="40"/><text x="63.5077%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.04%)</title><rect x="63.7319%" y="101" width="0.0384%" height="15" fill="rgb(248,123,6)" fg:x="4973" fg:w="3"/><text x="63.9819%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.03%)</title><rect x="63.7703%" y="133" width="0.0256%" height="15" fill="rgb(206,91,31)" fg:x="4976" fg:w="2"/><text x="64.0203%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="63.7960%" y="133" width="0.0256%" height="15" fill="rgb(211,154,13)" fg:x="4978" fg:w="2"/><text x="64.0460%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="63.8216%" y="133" width="0.0256%" height="15" fill="rgb(225,148,7)" fg:x="4980" fg:w="2"/><text x="64.0716%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="63.8472%" y="133" width="0.0128%" height="15" fill="rgb(220,160,43)" fg:x="4982" fg:w="1"/><text x="64.0972%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (3 samples, 0.04%)</title><rect x="63.9882%" y="117" width="0.0384%" height="15" fill="rgb(213,52,39)" fg:x="4993" fg:w="3"/><text x="64.2382%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (3 samples, 0.04%)</title><rect x="64.1035%" y="101" width="0.0384%" height="15" fill="rgb(243,137,7)" fg:x="5002" fg:w="3"/><text x="64.3535%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="64.1420%" y="101" width="0.0128%" height="15" fill="rgb(230,79,13)" fg:x="5005" fg:w="1"/><text x="64.3920%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="64.1548%" y="101" width="0.0384%" height="15" fill="rgb(247,105,23)" fg:x="5006" fg:w="3"/><text x="64.4048%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.15%)</title><rect x="64.1933%" y="101" width="0.1538%" height="15" fill="rgb(223,179,41)" fg:x="5009" fg:w="12"/><text x="64.4433%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="64.4239%" y="85" width="0.0128%" height="15" fill="rgb(218,9,34)" fg:x="5027" fg:w="1"/><text x="64.6739%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (1 samples, 0.01%)</title><rect x="64.4368%" y="85" width="0.0128%" height="15" fill="rgb(222,106,8)" fg:x="5028" fg:w="1"/><text x="64.6868%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (18 samples, 0.23%)</title><rect x="64.4496%" y="85" width="0.2307%" height="15" fill="rgb(211,220,0)" fg:x="5029" fg:w="18"/><text x="64.6996%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.19%)</title><rect x="64.7571%" y="69" width="0.1922%" height="15" fill="rgb(229,52,16)" fg:x="5053" fg:w="15"/><text x="65.0071%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.06%)</title><rect x="64.8853%" y="53" width="0.0641%" height="15" fill="rgb(212,155,18)" fg:x="5063" fg:w="5"/><text x="65.1353%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.28%)</title><rect x="64.6803%" y="85" width="0.2819%" height="15" fill="rgb(242,21,14)" fg:x="5047" fg:w="22"/><text x="64.9303%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="64.9494%" y="69" width="0.0128%" height="15" fill="rgb(222,19,48)" fg:x="5068" fg:w="1"/><text x="65.1994%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (71 samples, 0.91%)</title><rect x="64.3470%" y="101" width="0.9099%" height="15" fill="rgb(232,45,27)" fg:x="5021" fg:w="71"/><text x="64.5970%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (23 samples, 0.29%)</title><rect x="64.9622%" y="85" width="0.2948%" height="15" fill="rgb(249,103,42)" fg:x="5069" fg:w="23"/><text x="65.2122%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (101 samples, 1.29%)</title><rect x="64.0267%" y="117" width="1.2944%" height="15" fill="rgb(246,81,33)" fg:x="4996" fg:w="101"/><text x="64.2767%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.06%)</title><rect x="65.2570%" y="101" width="0.0641%" height="15" fill="rgb(252,33,42)" fg:x="5092" fg:w="5"/><text x="65.5070%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.21%)</title><rect x="65.3210%" y="117" width="0.2050%" height="15" fill="rgb(209,212,41)" fg:x="5097" fg:w="16"/><text x="65.5710%" y="127.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (235 samples, 3.01%)</title><rect x="62.5785%" y="165" width="3.0117%" height="15" fill="rgb(207,154,6)" fg:x="4883" fg:w="235"/><text x="62.8285%" y="175.50">peg..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (205 samples, 2.63%)</title><rect x="62.9630%" y="149" width="2.6272%" height="15" fill="rgb(223,64,47)" fg:x="4913" fg:w="205"/><text x="63.2130%" y="159.50">pe..</text></g><g><title>libsystem_malloc.dylib`realloc (135 samples, 1.73%)</title><rect x="63.8601%" y="133" width="1.7301%" height="15" fill="rgb(211,161,38)" fg:x="4983" fg:w="135"/><text x="64.1101%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (5 samples, 0.06%)</title><rect x="65.5261%" y="117" width="0.0641%" height="15" fill="rgb(219,138,40)" fg:x="5113" fg:w="5"/><text x="65.7761%" y="127.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1,815 samples, 23.26%)</title><rect x="42.4196%" y="197" width="23.2603%" height="15" fill="rgb(241,228,46)" fg:x="3310" fg:w="1815"/><text x="42.6696%" y="207.50">peg-solitaire`peg_solitaire::find_mov..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (401 samples, 5.14%)</title><rect x="60.5408%" y="181" width="5.1390%" height="15" fill="rgb(223,209,38)" fg:x="4724" fg:w="401"/><text x="60.7908%" y="191.50">peg-so..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (7 samples, 0.09%)</title><rect x="65.5902%" y="165" width="0.0897%" height="15" fill="rgb(236,164,45)" fg:x="5118" fg:w="7"/><text x="65.8402%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="66.5257%" y="165" width="0.0256%" height="15" fill="rgb(231,15,5)" fg:x="5191" fg:w="2"/><text x="66.7757%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="66.5513%" y="165" width="0.0128%" height="15" fill="rgb(252,35,15)" fg:x="5193" fg:w="1"/><text x="66.8013%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$realloc (1 samples, 0.01%)</title><rect x="66.5641%" y="165" width="0.0128%" height="15" fill="rgb(248,181,18)" fg:x="5194" fg:w="1"/><text x="66.8141%" y="175.50"></text></g><g><title>peg-solitaire`__rdl_alloc (2 samples, 0.03%)</title><rect x="66.5770%" y="165" width="0.0256%" height="15" fill="rgb(233,39,42)" fg:x="5195" fg:w="2"/><text x="66.8270%" y="175.50"></text></g><g><title>peg-solitaire`__rdl_realloc (2 samples, 0.03%)</title><rect x="66.6026%" y="165" width="0.0256%" height="15" fill="rgb(238,110,33)" fg:x="5197" fg:w="2"/><text x="66.8526%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="66.6795%" y="133" width="0.0384%" height="15" fill="rgb(233,195,10)" fg:x="5203" fg:w="3"/><text x="66.9295%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.14%)</title><rect x="66.7436%" y="117" width="0.1410%" height="15" fill="rgb(254,105,3)" fg:x="5208" fg:w="11"/><text x="66.9936%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.04%)</title><rect x="66.8461%" y="101" width="0.0384%" height="15" fill="rgb(221,225,9)" fg:x="5216" fg:w="3"/><text x="67.0961%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.27%)</title><rect x="66.6282%" y="149" width="0.2691%" height="15" fill="rgb(224,227,45)" fg:x="5199" fg:w="21"/><text x="66.8782%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.18%)</title><rect x="66.7179%" y="133" width="0.1794%" height="15" fill="rgb(229,198,43)" fg:x="5206" fg:w="14"/><text x="66.9679%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="66.8845%" y="117" width="0.0128%" height="15" fill="rgb(206,209,35)" fg:x="5219" fg:w="1"/><text x="67.1345%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="66.8973%" y="149" width="0.0128%" height="15" fill="rgb(245,195,53)" fg:x="5220" fg:w="1"/><text x="67.1473%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="66.9102%" y="149" width="0.0128%" height="15" fill="rgb(240,92,26)" fg:x="5221" fg:w="1"/><text x="67.1602%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="66.9230%" y="149" width="0.0256%" height="15" fill="rgb(207,40,23)" fg:x="5222" fg:w="2"/><text x="67.1730%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (3 samples, 0.04%)</title><rect x="67.0511%" y="133" width="0.0384%" height="15" fill="rgb(223,111,35)" fg:x="5232" fg:w="3"/><text x="67.3011%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (1 samples, 0.01%)</title><rect x="67.1280%" y="117" width="0.0128%" height="15" fill="rgb(229,147,28)" fg:x="5238" fg:w="1"/><text x="67.3780%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="67.1408%" y="117" width="0.0128%" height="15" fill="rgb(211,29,28)" fg:x="5239" fg:w="1"/><text x="67.3908%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.08%)</title><rect x="67.1537%" y="117" width="0.0769%" height="15" fill="rgb(228,72,33)" fg:x="5240" fg:w="6"/><text x="67.4037%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (2 samples, 0.03%)</title><rect x="67.2946%" y="101" width="0.0256%" height="15" fill="rgb(205,214,31)" fg:x="5251" fg:w="2"/><text x="67.5446%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.08%)</title><rect x="67.3203%" y="101" width="0.0769%" height="15" fill="rgb(224,111,15)" fg:x="5253" fg:w="6"/><text x="67.5703%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.19%)</title><rect x="67.3972%" y="101" width="0.1922%" height="15" fill="rgb(253,21,26)" fg:x="5259" fg:w="15"/><text x="67.6472%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.17%)</title><rect x="67.4228%" y="85" width="0.1666%" height="15" fill="rgb(245,139,43)" fg:x="5261" fg:w="13"/><text x="67.6728%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.05%)</title><rect x="67.5381%" y="69" width="0.0513%" height="15" fill="rgb(252,170,7)" fg:x="5270" fg:w="4"/><text x="67.7881%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (40 samples, 0.51%)</title><rect x="67.2306%" y="117" width="0.5126%" height="15" fill="rgb(231,118,14)" fg:x="5246" fg:w="40"/><text x="67.4806%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.15%)</title><rect x="67.5894%" y="101" width="0.1538%" height="15" fill="rgb(238,83,0)" fg:x="5274" fg:w="12"/><text x="67.8394%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (54 samples, 0.69%)</title><rect x="67.0896%" y="133" width="0.6920%" height="15" fill="rgb(221,39,39)" fg:x="5235" fg:w="54"/><text x="67.3396%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="67.7432%" y="117" width="0.0384%" height="15" fill="rgb(222,119,46)" fg:x="5286" fg:w="3"/><text x="67.9932%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.10%)</title><rect x="67.7816%" y="133" width="0.1025%" height="15" fill="rgb(222,165,49)" fg:x="5289" fg:w="8"/><text x="68.0316%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (109 samples, 1.40%)</title><rect x="66.5001%" y="181" width="1.3969%" height="15" fill="rgb(219,113,52)" fg:x="5189" fg:w="109"/><text x="66.7501%" y="191.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (99 samples, 1.27%)</title><rect x="66.6282%" y="165" width="1.2687%" height="15" fill="rgb(214,7,15)" fg:x="5199" fg:w="99"/><text x="66.8782%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (74 samples, 0.95%)</title><rect x="66.9486%" y="149" width="0.9484%" height="15" fill="rgb(235,32,4)" fg:x="5224" fg:w="74"/><text x="67.1986%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="67.8841%" y="133" width="0.0128%" height="15" fill="rgb(238,90,54)" fg:x="5297" fg:w="1"/><text x="68.1341%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (175 samples, 2.24%)</title><rect x="65.6799%" y="197" width="2.2427%" height="15" fill="rgb(213,208,19)" fg:x="5125" fg:w="175"/><text x="65.9299%" y="207.50">p..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="67.8970%" y="181" width="0.0256%" height="15" fill="rgb(233,156,4)" fg:x="5298" fg:w="2"/><text x="68.1470%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (20 samples, 0.26%)</title><rect x="68.1661%" y="181" width="0.2563%" height="15" fill="rgb(207,194,5)" fg:x="5319" fg:w="20"/><text x="68.4161%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (63 samples, 0.81%)</title><rect x="68.4224%" y="181" width="0.8074%" height="15" fill="rgb(206,111,30)" fg:x="5339" fg:w="63"/><text x="68.6724%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.10%)</title><rect x="69.1273%" y="165" width="0.1025%" height="15" fill="rgb(243,70,54)" fg:x="5394" fg:w="8"/><text x="69.3773%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (32 samples, 0.41%)</title><rect x="69.2298%" y="181" width="0.4101%" height="15" fill="rgb(242,28,8)" fg:x="5402" fg:w="32"/><text x="69.4798%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (28 samples, 0.36%)</title><rect x="69.6399%" y="181" width="0.3588%" height="15" fill="rgb(219,106,18)" fg:x="5434" fg:w="28"/><text x="69.8899%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="69.9987%" y="181" width="0.0256%" height="15" fill="rgb(244,222,10)" fg:x="5462" fg:w="2"/><text x="70.2487%" y="191.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (20 samples, 0.26%)</title><rect x="70.0243%" y="181" width="0.2563%" height="15" fill="rgb(236,179,52)" fg:x="5464" fg:w="20"/><text x="70.2743%" y="191.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.13%)</title><rect x="70.2807%" y="181" width="0.1282%" height="15" fill="rgb(213,23,39)" fg:x="5484" fg:w="10"/><text x="70.5307%" y="191.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (20 samples, 0.26%)</title><rect x="70.4088%" y="181" width="0.2563%" height="15" fill="rgb(238,48,10)" fg:x="5494" fg:w="20"/><text x="70.6588%" y="191.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (5 samples, 0.06%)</title><rect x="70.6011%" y="165" width="0.0641%" height="15" fill="rgb(251,196,23)" fg:x="5509" fg:w="5"/><text x="70.8511%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (213 samples, 2.73%)</title><rect x="77.2908%" y="165" width="2.7297%" height="15" fill="rgb(250,152,24)" fg:x="6031" fg:w="213"/><text x="77.5408%" y="175.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (96 samples, 1.23%)</title><rect x="78.7902%" y="149" width="1.2303%" height="15" fill="rgb(209,150,17)" fg:x="6148" fg:w="96"/><text x="79.0402%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (12 samples, 0.15%)</title><rect x="80.0205%" y="165" width="0.1538%" height="15" fill="rgb(234,202,34)" fg:x="6244" fg:w="12"/><text x="80.2705%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (63 samples, 0.81%)</title><rect x="80.1743%" y="165" width="0.8074%" height="15" fill="rgb(253,148,53)" fg:x="6256" fg:w="63"/><text x="80.4243%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (26 samples, 0.33%)</title><rect x="80.9817%" y="165" width="0.3332%" height="15" fill="rgb(218,129,16)" fg:x="6319" fg:w="26"/><text x="81.2317%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.15%)</title><rect x="81.6737%" y="149" width="0.1538%" height="15" fill="rgb(216,85,19)" fg:x="6373" fg:w="12"/><text x="81.9237%" y="159.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (11 samples, 0.14%)</title><rect x="81.8275%" y="149" width="0.1410%" height="15" fill="rgb(235,228,7)" fg:x="6385" fg:w="11"/><text x="82.0775%" y="159.50"></text></g><g><title>peg-solitaire`__rdl_alloc (11 samples, 0.14%)</title><rect x="81.9685%" y="149" width="0.1410%" height="15" fill="rgb(245,175,0)" fg:x="6396" fg:w="11"/><text x="82.2185%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.09%)</title><rect x="82.9296%" y="117" width="0.0897%" height="15" fill="rgb(208,168,36)" fg:x="6471" fg:w="7"/><text x="83.1796%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (115 samples, 1.47%)</title><rect x="83.3526%" y="101" width="1.4738%" height="15" fill="rgb(246,171,24)" fg:x="6504" fg:w="115"/><text x="83.6026%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (34 samples, 0.44%)</title><rect x="84.3906%" y="85" width="0.4357%" height="15" fill="rgb(215,142,24)" fg:x="6585" fg:w="34"/><text x="84.6406%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (211 samples, 2.70%)</title><rect x="82.3401%" y="133" width="2.7041%" height="15" fill="rgb(250,187,7)" fg:x="6425" fg:w="211"/><text x="82.5901%" y="143.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (158 samples, 2.02%)</title><rect x="83.0194%" y="117" width="2.0249%" height="15" fill="rgb(228,66,33)" fg:x="6478" fg:w="158"/><text x="83.2694%" y="127.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.22%)</title><rect x="84.8263%" y="101" width="0.2179%" height="15" fill="rgb(234,215,21)" fg:x="6619" fg:w="17"/><text x="85.0763%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.17%)</title><rect x="85.0442%" y="133" width="0.1666%" height="15" fill="rgb(222,191,20)" fg:x="6636" fg:w="13"/><text x="85.2942%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (306 samples, 3.92%)</title><rect x="81.3149%" y="165" width="3.9216%" height="15" fill="rgb(245,79,54)" fg:x="6345" fg:w="306"/><text x="81.5649%" y="175.50">peg-..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (244 samples, 3.13%)</title><rect x="82.1094%" y="149" width="3.1270%" height="15" fill="rgb(240,10,37)" fg:x="6407" fg:w="244"/><text x="82.3594%" y="159.50">peg..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="85.2108%" y="133" width="0.0256%" height="15" fill="rgb(214,192,32)" fg:x="6649" fg:w="2"/><text x="85.4608%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (19 samples, 0.24%)</title><rect x="85.2364%" y="165" width="0.2435%" height="15" fill="rgb(209,36,54)" fg:x="6651" fg:w="19"/><text x="85.4864%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (4 samples, 0.05%)</title><rect x="87.6842%" y="133" width="0.0513%" height="15" fill="rgb(220,10,11)" fg:x="6842" fg:w="4"/><text x="87.9342%" y="143.50"></text></g><g><title>peg-solitaire`__rdl_alloc (4 samples, 0.05%)</title><rect x="87.7355%" y="133" width="0.0513%" height="15" fill="rgb(221,106,17)" fg:x="6846" fg:w="4"/><text x="87.9855%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="88.0687%" y="101" width="0.0384%" height="15" fill="rgb(251,142,44)" fg:x="6872" fg:w="3"/><text x="88.3187%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.33%)</title><rect x="88.1712%" y="85" width="0.3332%" height="15" fill="rgb(238,13,15)" fg:x="6880" fg:w="26"/><text x="88.4212%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.10%)</title><rect x="88.4019%" y="69" width="0.1025%" height="15" fill="rgb(208,107,27)" fg:x="6898" fg:w="8"/><text x="88.6519%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (60 samples, 0.77%)</title><rect x="87.8636%" y="117" width="0.7689%" height="15" fill="rgb(205,136,37)" fg:x="6856" fg:w="60"/><text x="88.1136%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (41 samples, 0.53%)</title><rect x="88.1071%" y="101" width="0.5254%" height="15" fill="rgb(250,205,27)" fg:x="6875" fg:w="41"/><text x="88.3571%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.13%)</title><rect x="88.5044%" y="85" width="0.1282%" height="15" fill="rgb(210,80,43)" fg:x="6906" fg:w="10"/><text x="88.7544%" y="95.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (82 samples, 1.05%)</title><rect x="87.6073%" y="149" width="1.0509%" height="15" fill="rgb(247,160,36)" fg:x="6836" fg:w="82"/><text x="87.8573%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (68 samples, 0.87%)</title><rect x="87.7867%" y="133" width="0.8715%" height="15" fill="rgb(234,13,49)" fg:x="6850" fg:w="68"/><text x="88.0367%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.03%)</title><rect x="88.6326%" y="117" width="0.0256%" height="15" fill="rgb(234,122,0)" fg:x="6916" fg:w="2"/><text x="88.8826%" y="127.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (1,406 samples, 18.02%)</title><rect x="70.6651%" y="181" width="18.0187%" height="15" fill="rgb(207,146,38)" fg:x="5514" fg:w="1406"/><text x="70.9151%" y="191.50">peg-solitaire`peg_solitaire:..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (250 samples, 3.20%)</title><rect x="85.4799%" y="165" width="3.2039%" height="15" fill="rgb(207,177,25)" fg:x="6670" fg:w="250"/><text x="85.7299%" y="175.50">peg..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="88.6582%" y="149" width="0.0256%" height="15" fill="rgb(211,178,42)" fg:x="6918" fg:w="2"/><text x="88.9082%" y="159.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="90.5037%" y="149" width="0.0128%" height="15" fill="rgb(230,69,54)" fg:x="7062" fg:w="1"/><text x="90.7537%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="90.7471%" y="117" width="0.0256%" height="15" fill="rgb(214,135,41)" fg:x="7081" fg:w="2"/><text x="90.9971%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (30 samples, 0.38%)</title><rect x="90.8240%" y="101" width="0.3845%" height="15" fill="rgb(237,67,25)" fg:x="7087" fg:w="30"/><text x="91.0740%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.15%)</title><rect x="91.0547%" y="85" width="0.1538%" height="15" fill="rgb(222,189,50)" fg:x="7105" fg:w="12"/><text x="91.3047%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (51 samples, 0.65%)</title><rect x="90.5805%" y="133" width="0.6536%" height="15" fill="rgb(245,148,34)" fg:x="7068" fg:w="51"/><text x="90.8305%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.46%)</title><rect x="90.7728%" y="117" width="0.4614%" height="15" fill="rgb(222,29,6)" fg:x="7083" fg:w="36"/><text x="91.0228%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="91.2085%" y="101" width="0.0256%" height="15" fill="rgb(221,189,43)" fg:x="7117" fg:w="2"/><text x="91.4585%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.04%)</title><rect x="91.2341%" y="133" width="0.0384%" height="15" fill="rgb(207,36,27)" fg:x="7119" fg:w="3"/><text x="91.4841%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (71 samples, 0.91%)</title><rect x="90.3755%" y="165" width="0.9099%" height="15" fill="rgb(217,90,24)" fg:x="7052" fg:w="71"/><text x="90.6255%" y="175.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (60 samples, 0.77%)</title><rect x="90.5165%" y="149" width="0.7689%" height="15" fill="rgb(224,66,35)" fg:x="7063" fg:w="60"/><text x="90.7665%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="91.2726%" y="133" width="0.0128%" height="15" fill="rgb(221,13,50)" fg:x="7122" fg:w="1"/><text x="91.5226%" y="143.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (204 samples, 2.61%)</title><rect x="88.6838%" y="181" width="2.6144%" height="15" fill="rgb(236,68,49)" fg:x="6920" fg:w="204"/><text x="88.9338%" y="191.50">pe..</text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="91.2854%" y="165" width="0.0128%" height="15" fill="rgb(229,146,28)" fg:x="7123" fg:w="1"/><text x="91.5354%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.09%)</title><rect x="91.4136%" y="165" width="0.0897%" height="15" fill="rgb(225,31,38)" fg:x="7133" fg:w="7"/><text x="91.6636%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (38 samples, 0.49%)</title><rect x="91.5033%" y="165" width="0.4870%" height="15" fill="rgb(250,208,3)" fg:x="7140" fg:w="38"/><text x="91.7533%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.17%)</title><rect x="91.8237%" y="149" width="0.1666%" height="15" fill="rgb(246,54,23)" fg:x="7165" fg:w="13"/><text x="92.0737%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (13 samples, 0.17%)</title><rect x="91.9903%" y="165" width="0.1666%" height="15" fill="rgb(243,76,11)" fg:x="7178" fg:w="13"/><text x="92.2403%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.10%)</title><rect x="92.1569%" y="165" width="0.1025%" height="15" fill="rgb(245,21,50)" fg:x="7191" fg:w="8"/><text x="92.4069%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="92.2594%" y="165" width="0.0256%" height="15" fill="rgb(228,9,43)" fg:x="7199" fg:w="2"/><text x="92.5094%" y="175.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (7 samples, 0.09%)</title><rect x="92.2850%" y="165" width="0.0897%" height="15" fill="rgb(208,100,47)" fg:x="7201" fg:w="7"/><text x="92.5350%" y="175.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="92.3747%" y="165" width="0.0256%" height="15" fill="rgb(232,26,8)" fg:x="7208" fg:w="2"/><text x="92.6247%" y="175.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::move_piece (3 samples, 0.04%)</title><rect x="92.4004%" y="165" width="0.0384%" height="15" fill="rgb(216,166,38)" fg:x="7210" fg:w="3"/><text x="92.6504%" y="175.50"></text></g><g><title>peg-solitaire`peg_solitaire::board::Board::valid_move (2 samples, 0.03%)</title><rect x="92.4132%" y="149" width="0.0256%" height="15" fill="rgb(251,202,51)" fg:x="7211" fg:w="2"/><text x="92.6632%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (67 samples, 0.86%)</title><rect x="94.0920%" y="149" width="0.8586%" height="15" fill="rgb(254,216,34)" fg:x="7342" fg:w="67"/><text x="94.3420%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (33 samples, 0.42%)</title><rect x="94.5277%" y="133" width="0.4229%" height="15" fill="rgb(251,32,27)" fg:x="7376" fg:w="33"/><text x="94.7777%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.03%)</title><rect x="94.9507%" y="149" width="0.0256%" height="15" fill="rgb(208,127,28)" fg:x="7409" fg:w="2"/><text x="95.2007%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (23 samples, 0.29%)</title><rect x="94.9763%" y="149" width="0.2948%" height="15" fill="rgb(224,137,22)" fg:x="7411" fg:w="23"/><text x="95.2263%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.04%)</title><rect x="95.2710%" y="149" width="0.0384%" height="15" fill="rgb(254,70,32)" fg:x="7434" fg:w="3"/><text x="95.5210%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="95.4120%" y="133" width="0.0128%" height="15" fill="rgb(229,75,37)" fg:x="7445" fg:w="1"/><text x="95.6620%" y="143.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (4 samples, 0.05%)</title><rect x="95.4248%" y="133" width="0.0513%" height="15" fill="rgb(252,64,23)" fg:x="7446" fg:w="4"/><text x="95.6748%" y="143.50"></text></g><g><title>peg-solitaire`__rdl_alloc (2 samples, 0.03%)</title><rect x="95.4761%" y="133" width="0.0256%" height="15" fill="rgb(232,162,48)" fg:x="7450" fg:w="2"/><text x="95.7261%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="95.8093%" y="101" width="0.0128%" height="15" fill="rgb(246,160,12)" fg:x="7476" fg:w="1"/><text x="96.0593%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (36 samples, 0.46%)</title><rect x="95.8990%" y="85" width="0.4614%" height="15" fill="rgb(247,166,0)" fg:x="7483" fg:w="36"/><text x="96.1490%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.15%)</title><rect x="96.2066%" y="69" width="0.1538%" height="15" fill="rgb(249,219,21)" fg:x="7507" fg:w="12"/><text x="96.4566%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.79%)</title><rect x="95.6043%" y="117" width="0.7946%" height="15" fill="rgb(205,209,3)" fg:x="7460" fg:w="62"/><text x="95.8543%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (45 samples, 0.58%)</title><rect x="95.8221%" y="101" width="0.5767%" height="15" fill="rgb(243,44,1)" fg:x="7477" fg:w="45"/><text x="96.0721%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.04%)</title><rect x="96.3604%" y="85" width="0.0384%" height="15" fill="rgb(206,159,16)" fg:x="7519" fg:w="3"/><text x="96.6104%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.10%)</title><rect x="96.3988%" y="117" width="0.1025%" height="15" fill="rgb(244,77,30)" fg:x="7522" fg:w="8"/><text x="96.6488%" y="127.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (94 samples, 1.20%)</title><rect x="95.3095%" y="149" width="1.2047%" height="15" fill="rgb(218,69,12)" fg:x="7437" fg:w="94"/><text x="95.5595%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (79 samples, 1.01%)</title><rect x="95.5017%" y="133" width="1.0124%" height="15" fill="rgb(212,87,7)" fg:x="7452" fg:w="79"/><text x="95.7517%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="96.5013%" y="117" width="0.0128%" height="15" fill="rgb(245,114,25)" fg:x="7530" fg:w="1"/><text x="96.7513%" y="127.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (7 samples, 0.09%)</title><rect x="96.5142%" y="149" width="0.0897%" height="15" fill="rgb(210,61,42)" fg:x="7531" fg:w="7"/><text x="96.7642%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="97.4881%" y="117" width="0.0128%" height="15" fill="rgb(211,52,33)" fg:x="7607" fg:w="1"/><text x="97.7381%" y="127.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="97.5010%" y="117" width="0.0128%" height="15" fill="rgb(234,58,33)" fg:x="7608" fg:w="1"/><text x="97.7510%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="97.6163%" y="85" width="0.0256%" height="15" fill="rgb(220,115,36)" fg:x="7617" fg:w="2"/><text x="97.8663%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.15%)</title><rect x="97.6932%" y="69" width="0.1538%" height="15" fill="rgb(243,153,54)" fg:x="7623" fg:w="12"/><text x="97.9432%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="97.8214%" y="53" width="0.0256%" height="15" fill="rgb(251,47,18)" fg:x="7633" fg:w="2"/><text x="98.0714%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.32%)</title><rect x="97.5394%" y="101" width="0.3204%" height="15" fill="rgb(242,102,42)" fg:x="7611" fg:w="25"/><text x="97.7894%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.22%)</title><rect x="97.6419%" y="85" width="0.2179%" height="15" fill="rgb(234,31,38)" fg:x="7619" fg:w="17"/><text x="97.8919%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="97.8470%" y="69" width="0.0128%" height="15" fill="rgb(221,117,51)" fg:x="7635" fg:w="1"/><text x="98.0970%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.04%)</title><rect x="97.8598%" y="101" width="0.0384%" height="15" fill="rgb(212,20,18)" fg:x="7636" fg:w="3"/><text x="98.1098%" y="111.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (34 samples, 0.44%)</title><rect x="97.4753%" y="133" width="0.4357%" height="15" fill="rgb(245,133,36)" fg:x="7606" fg:w="34"/><text x="97.7253%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (31 samples, 0.40%)</title><rect x="97.5138%" y="117" width="0.3973%" height="15" fill="rgb(212,6,19)" fg:x="7609" fg:w="31"/><text x="97.7638%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="97.8982%" y="101" width="0.0128%" height="15" fill="rgb(218,1,36)" fg:x="7639" fg:w="1"/><text x="98.1482%" y="111.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (428 samples, 5.49%)</title><rect x="92.4388%" y="165" width="5.4851%" height="15" fill="rgb(246,84,54)" fg:x="7213" fg:w="428"/><text x="92.6888%" y="175.50">peg-sol..</text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (103 samples, 1.32%)</title><rect x="96.6039%" y="149" width="1.3200%" height="15" fill="rgb(242,110,6)" fg:x="7538" fg:w="103"/><text x="96.8539%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="97.9111%" y="133" width="0.0128%" height="15" fill="rgb(214,47,5)" fg:x="7640" fg:w="1"/><text x="98.1611%" y="143.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="98.6672%" y="133" width="0.0128%" height="15" fill="rgb(218,159,25)" fg:x="7699" fg:w="1"/><text x="98.9172%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.21%)</title><rect x="98.7184%" y="117" width="0.2050%" height="15" fill="rgb(215,211,28)" fg:x="7703" fg:w="16"/><text x="98.9684%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.15%)</title><rect x="98.7697%" y="101" width="0.1538%" height="15" fill="rgb(238,59,32)" fg:x="7707" fg:w="12"/><text x="99.0197%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.13%)</title><rect x="98.7953%" y="85" width="0.1282%" height="15" fill="rgb(226,82,3)" fg:x="7709" fg:w="10"/><text x="99.0453%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.05%)</title><rect x="98.8722%" y="69" width="0.0513%" height="15" fill="rgb(240,164,32)" fg:x="7715" fg:w="4"/><text x="99.1222%" y="79.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (79 samples, 1.01%)</title><rect x="97.9239%" y="165" width="1.0124%" height="15" fill="rgb(232,46,7)" fg:x="7641" fg:w="79"/><text x="98.1739%" y="175.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 0.29%)</title><rect x="98.6415%" y="149" width="0.2948%" height="15" fill="rgb(229,129,53)" fg:x="7697" fg:w="23"/><text x="98.8915%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (20 samples, 0.26%)</title><rect x="98.6800%" y="133" width="0.2563%" height="15" fill="rgb(234,188,29)" fg:x="7700" fg:w="20"/><text x="98.9300%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="98.9235%" y="117" width="0.0128%" height="15" fill="rgb(246,141,4)" fg:x="7719" fg:w="1"/><text x="99.1735%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.01%)</title><rect x="98.9363%" y="149" width="0.0128%" height="15" fill="rgb(229,23,39)" fg:x="7720" fg:w="1"/><text x="99.1863%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="98.9491%" y="149" width="0.0128%" height="15" fill="rgb(206,12,3)" fg:x="7721" fg:w="1"/><text x="99.1991%" y="159.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="98.9619%" y="149" width="0.0128%" height="15" fill="rgb(252,226,20)" fg:x="7722" fg:w="1"/><text x="99.2119%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.15%)</title><rect x="99.0901%" y="133" width="0.1538%" height="15" fill="rgb(216,123,35)" fg:x="7732" fg:w="12"/><text x="99.3401%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.06%)</title><rect x="99.1798%" y="117" width="0.0641%" height="15" fill="rgb(212,68,40)" fg:x="7739" fg:w="5"/><text x="99.4298%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.04%)</title><rect x="99.2439%" y="133" width="0.0384%" height="15" fill="rgb(254,125,32)" fg:x="7744" fg:w="3"/><text x="99.4939%" y="143.50"></text></g><g><title>peg-solitaire`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="99.2951%" y="117" width="0.0128%" height="15" fill="rgb(253,97,22)" fg:x="7748" fg:w="1"/><text x="99.5451%" y="127.50"></text></g><g><title>peg-solitaire`__rdl_alloc (1 samples, 0.01%)</title><rect x="99.3080%" y="117" width="0.0128%" height="15" fill="rgb(241,101,14)" fg:x="7749" fg:w="1"/><text x="99.5580%" y="127.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.10%)</title><rect x="99.2823%" y="133" width="0.1025%" height="15" fill="rgb(238,103,29)" fg:x="7747" fg:w="8"/><text x="99.5323%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (5 samples, 0.06%)</title><rect x="99.3208%" y="117" width="0.0641%" height="15" fill="rgb(233,195,47)" fg:x="7750" fg:w="5"/><text x="99.5708%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.06%)</title><rect x="99.3208%" y="101" width="0.0641%" height="15" fill="rgb(246,218,30)" fg:x="7750" fg:w="5"/><text x="99.5708%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="99.3592%" y="85" width="0.0256%" height="15" fill="rgb(219,145,47)" fg:x="7753" fg:w="2"/><text x="99.6092%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="99.3592%" y="69" width="0.0256%" height="15" fill="rgb(243,12,26)" fg:x="7753" fg:w="2"/><text x="99.6092%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.05%)</title><rect x="99.5130%" y="85" width="0.0513%" height="15" fill="rgb(214,87,16)" fg:x="7765" fg:w="4"/><text x="99.7630%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="99.5386%" y="69" width="0.0256%" height="15" fill="rgb(208,99,42)" fg:x="7767" fg:w="2"/><text x="99.7886%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="99.5386%" y="53" width="0.0256%" height="15" fill="rgb(253,99,2)" fg:x="7767" fg:w="2"/><text x="99.7886%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="99.5515%" y="37" width="0.0128%" height="15" fill="rgb(220,168,23)" fg:x="7768" fg:w="1"/><text x="99.8015%" y="47.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_moves (47 samples, 0.60%)</title><rect x="98.9748%" y="149" width="0.6023%" height="15" fill="rgb(242,38,24)" fg:x="7723" fg:w="47"/><text x="99.2248%" y="159.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (15 samples, 0.19%)</title><rect x="99.3849%" y="133" width="0.1922%" height="15" fill="rgb(225,182,9)" fg:x="7755" fg:w="15"/><text x="99.6349%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.08%)</title><rect x="99.5002%" y="117" width="0.0769%" height="15" fill="rgb(243,178,37)" fg:x="7764" fg:w="6"/><text x="99.7502%" y="127.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (6 samples, 0.08%)</title><rect x="99.5002%" y="101" width="0.0769%" height="15" fill="rgb(232,139,19)" fg:x="7764" fg:w="6"/><text x="99.7502%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="99.5643%" y="85" width="0.0128%" height="15" fill="rgb(225,201,24)" fg:x="7769" fg:w="1"/><text x="99.8143%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="99.7821%" y="117" width="0.0128%" height="15" fill="rgb(221,47,46)" fg:x="7786" fg:w="1"/><text x="100.0321%" y="127.50"></text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,790 samples, 99.83%)</title><rect x="0.0000%" y="645" width="99.8334%" height="15" fill="rgb(249,23,13)" fg:x="0" fg:w="7790"/><text x="0.2500%" y="655.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,789 samples, 99.82%)</title><rect x="0.0128%" y="629" width="99.8206%" height="15" fill="rgb(219,9,5)" fg:x="1" fg:w="7789"/><text x="0.2628%" y="639.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,788 samples, 99.81%)</title><rect x="0.0256%" y="613" width="99.8078%" height="15" fill="rgb(254,171,16)" fg:x="2" fg:w="7788"/><text x="0.2756%" y="623.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,786 samples, 99.78%)</title><rect x="0.0513%" y="597" width="99.7821%" height="15" fill="rgb(230,171,20)" fg:x="4" fg:w="7786"/><text x="0.3013%" y="607.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,784 samples, 99.76%)</title><rect x="0.0769%" y="581" width="99.7565%" height="15" fill="rgb(210,71,41)" fg:x="6" fg:w="7784"/><text x="0.3269%" y="591.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,782 samples, 99.73%)</title><rect x="0.1025%" y="565" width="99.7309%" height="15" fill="rgb(206,173,20)" fg:x="8" fg:w="7782"/><text x="0.3525%" y="575.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,781 samples, 99.72%)</title><rect x="0.1153%" y="549" width="99.7181%" height="15" fill="rgb(233,88,34)" fg:x="9" fg:w="7781"/><text x="0.3653%" y="559.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,777 samples, 99.67%)</title><rect x="0.1666%" y="533" width="99.6668%" height="15" fill="rgb(223,209,46)" fg:x="13" fg:w="7777"/><text x="0.4166%" y="543.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,774 samples, 99.63%)</title><rect x="0.2050%" y="517" width="99.6283%" height="15" fill="rgb(250,43,18)" fg:x="16" fg:w="7774"/><text x="0.4550%" y="527.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,773 samples, 99.62%)</title><rect x="0.2179%" y="501" width="99.6155%" height="15" fill="rgb(208,13,10)" fg:x="17" fg:w="7773"/><text x="0.4679%" y="511.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,772 samples, 99.60%)</title><rect x="0.2307%" y="485" width="99.6027%" height="15" fill="rgb(212,200,36)" fg:x="18" fg:w="7772"/><text x="0.4807%" y="495.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,771 samples, 99.59%)</title><rect x="0.2435%" y="469" width="99.5899%" height="15" fill="rgb(225,90,30)" fg:x="19" fg:w="7771"/><text x="0.4935%" y="479.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,769 samples, 99.56%)</title><rect x="0.2691%" y="453" width="99.5643%" height="15" fill="rgb(236,182,39)" fg:x="21" fg:w="7769"/><text x="0.5191%" y="463.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,766 samples, 99.53%)</title><rect x="0.3076%" y="437" width="99.5258%" height="15" fill="rgb(212,144,35)" fg:x="24" fg:w="7766"/><text x="0.5576%" y="447.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,765 samples, 99.51%)</title><rect x="0.3204%" y="421" width="99.5130%" height="15" fill="rgb(228,63,44)" fg:x="25" fg:w="7765"/><text x="0.5704%" y="431.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,763 samples, 99.49%)</title><rect x="0.3460%" y="405" width="99.4874%" height="15" fill="rgb(228,109,6)" fg:x="27" fg:w="7763"/><text x="0.5960%" y="415.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,759 samples, 99.44%)</title><rect x="0.3973%" y="389" width="99.4361%" height="15" fill="rgb(238,117,24)" fg:x="31" fg:w="7759"/><text x="0.6473%" y="399.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,758 samples, 99.42%)</title><rect x="0.4101%" y="373" width="99.4233%" height="15" fill="rgb(242,26,26)" fg:x="32" fg:w="7758"/><text x="0.6601%" y="383.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,758 samples, 99.42%)</title><rect x="0.4101%" y="357" width="99.4233%" height="15" fill="rgb(221,92,48)" fg:x="32" fg:w="7758"/><text x="0.6601%" y="367.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,758 samples, 99.42%)</title><rect x="0.4101%" y="341" width="99.4233%" height="15" fill="rgb(209,209,32)" fg:x="32" fg:w="7758"/><text x="0.6601%" y="351.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,757 samples, 99.41%)</title><rect x="0.4229%" y="325" width="99.4105%" height="15" fill="rgb(221,70,22)" fg:x="33" fg:w="7757"/><text x="0.6729%" y="335.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,753 samples, 99.36%)</title><rect x="0.4742%" y="309" width="99.3592%" height="15" fill="rgb(248,145,5)" fg:x="37" fg:w="7753"/><text x="0.7242%" y="319.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,749 samples, 99.31%)</title><rect x="0.5254%" y="293" width="99.3080%" height="15" fill="rgb(226,116,26)" fg:x="41" fg:w="7749"/><text x="0.7754%" y="303.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,728 samples, 99.04%)</title><rect x="0.7946%" y="277" width="99.0388%" height="15" fill="rgb(244,5,17)" fg:x="62" fg:w="7728"/><text x="1.0446%" y="287.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,612 samples, 97.55%)</title><rect x="2.2812%" y="261" width="97.5522%" height="15" fill="rgb(252,159,33)" fg:x="178" fg:w="7612"/><text x="2.5312%" y="271.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (7,304 samples, 93.61%)</title><rect x="6.2284%" y="245" width="93.6050%" height="15" fill="rgb(206,71,0)" fg:x="486" fg:w="7304"/><text x="6.4784%" y="255.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (6,487 samples, 83.13%)</title><rect x="16.6987%" y="229" width="83.1347%" height="15" fill="rgb(233,118,54)" fg:x="1303" fg:w="6487"/><text x="16.9487%" y="239.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (4,784 samples, 61.31%)</title><rect x="38.5236%" y="213" width="61.3098%" height="15" fill="rgb(234,83,48)" fg:x="3006" fg:w="4784"/><text x="38.7736%" y="223.50">peg-solitaire`peg_solitaire::solver::Solver::solve_board</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (2,490 samples, 31.91%)</title><rect x="67.9226%" y="197" width="31.9108%" height="15" fill="rgb(228,3,54)" fg:x="5300" fg:w="2490"/><text x="68.1726%" y="207.50">peg-solitaire`peg_solitaire::solver::Solver::solve_b..</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (666 samples, 8.54%)</title><rect x="91.2982%" y="181" width="8.5352%" height="15" fill="rgb(226,155,13)" fg:x="7124" fg:w="666"/><text x="91.5482%" y="191.50">peg-solitair..</text></g><g><title>peg-solitaire`peg_solitaire::solver::Solver::solve_board (70 samples, 0.90%)</title><rect x="98.9363%" y="165" width="0.8971%" height="15" fill="rgb(241,28,37)" fg:x="7720" fg:w="70"/><text x="99.1863%" y="175.50"></text></g><g><title>peg-solitaire`peg_solitaire::find_moves::_&lt;impl peg_solitaire::board::Board&gt;::find_pieces (20 samples, 0.26%)</title><rect x="99.5771%" y="149" width="0.2563%" height="15" fill="rgb(233,93,10)" fg:x="7770" fg:w="20"/><text x="99.8271%" y="159.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.06%)</title><rect x="99.7693%" y="133" width="0.0641%" height="15" fill="rgb(225,113,19)" fg:x="7785" fg:w="5"/><text x="100.0193%" y="143.50"></text></g><g><title>peg-solitaire`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="99.7950%" y="117" width="0.0384%" height="15" fill="rgb(241,2,18)" fg:x="7787" fg:w="3"/><text x="100.0450%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.04%)</title><rect x="99.7950%" y="101" width="0.0384%" height="15" fill="rgb(228,207,21)" fg:x="7787" fg:w="3"/><text x="100.0450%" y="111.50"></text></g><g><title>peg-solitaire`&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.01%)</title><rect x="99.8334%" y="597" width="0.0128%" height="15" fill="rgb(213,211,35)" fg:x="7790" fg:w="1"/><text x="100.0834%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (10 samples, 0.13%)</title><rect x="99.8462%" y="565" width="0.1282%" height="15" fill="rgb(209,83,10)" fg:x="7791" fg:w="10"/><text x="100.0962%" y="575.50"></text></g><g><title>peg-solitaire`peg_solitaire::main (7,802 samples, 99.99%)</title><rect x="0.0000%" y="661" width="99.9872%" height="15" fill="rgb(209,164,1)" fg:x="0" fg:w="7802"/><text x="0.2500%" y="671.50">peg-solitaire`peg_solitaire::main</text></g><g><title>peg-solitaire`std::io::stdio::_print (12 samples, 0.15%)</title><rect x="99.8334%" y="645" width="0.1538%" height="15" fill="rgb(213,184,43)" fg:x="7790" fg:w="12"/><text x="100.0834%" y="655.50"></text></g><g><title>peg-solitaire`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (12 samples, 0.15%)</title><rect x="99.8334%" y="629" width="0.1538%" height="15" fill="rgb(231,61,34)" fg:x="7790" fg:w="12"/><text x="100.0834%" y="639.50"></text></g><g><title>peg-solitaire`core::fmt::write (12 samples, 0.15%)</title><rect x="99.8334%" y="613" width="0.1538%" height="15" fill="rgb(235,75,3)" fg:x="7790" fg:w="12"/><text x="100.0834%" y="623.50"></text></g><g><title>peg-solitaire`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (11 samples, 0.14%)</title><rect x="99.8462%" y="597" width="0.1410%" height="15" fill="rgb(220,106,47)" fg:x="7791" fg:w="11"/><text x="100.0962%" y="607.50"></text></g><g><title>peg-solitaire`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (11 samples, 0.14%)</title><rect x="99.8462%" y="581" width="0.1410%" height="15" fill="rgb(210,196,33)" fg:x="7791" fg:w="11"/><text x="100.0962%" y="591.50"></text></g><g><title>peg-solitaire`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.01%)</title><rect x="99.9744%" y="565" width="0.0128%" height="15" fill="rgb(229,154,42)" fg:x="7801" fg:w="1"/><text x="100.2244%" y="575.50"></text></g><g><title>all (7,803 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(228,114,26)" fg:x="0" fg:w="7803"/><text x="0.2500%" y="767.50"></text></g><g><title>dyld`start (7,803 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(208,144,1)" fg:x="0" fg:w="7803"/><text x="0.2500%" y="751.50">dyld`start</text></g><g><title>peg-solitaire`main (7,803 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(239,112,37)" fg:x="0" fg:w="7803"/><text x="0.2500%" y="735.50">peg-solitaire`main</text></g><g><title>peg-solitaire`std::rt::lang_start_internal (7,803 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(210,96,50)" fg:x="0" fg:w="7803"/><text x="0.2500%" y="719.50">peg-solitaire`std::rt::lang_start_internal</text></g><g><title>peg-solitaire`std::rt::lang_start::_{{closure}} (7,803 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(222,178,2)" fg:x="0" fg:w="7803"/><text x="0.2500%" y="703.50">peg-solitaire`std::rt::lang_start::_{{closure}}</text></g><g><title>peg-solitaire`std::sys_common::backtrace::__rust_begin_short_backtrace (7,803 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(226,74,18)" fg:x="0" fg:w="7803"/><text x="0.2500%" y="687.50">peg-solitaire`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>peg-solitaire`std::time::Instant::elapsed (1 samples, 0.01%)</title><rect x="99.9872%" y="661" width="0.0128%" height="15" fill="rgb(225,67,54)" fg:x="7802" fg:w="1"/><text x="100.2372%" y="671.50"></text></g></svg></svg>